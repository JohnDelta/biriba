{"version":3,"sources":["Login.js","NewGame.js","UnfinishedGames.js","UnfinishedGame.js","FinishedGame.js","History.js","Menu.js","Logout.js","Keys.js","App.js","index.js"],"names":["Login","className","onClick","this","props","signInFunction","React","Component","NewGame","state","numberOfPlayers","numberOfTeams","players","teams","onChangeNumberOfPlayers","bind","submitNumberOfPlayers","onChangePlayerNames","submitNumberOfTeams","onChangeNumberOfTeams","getAvailablePlayers","addPlayerToTeam","removePlayerFromTeam","createGameNote","getDateToString","e","setState","target","value","i","push","playerId","id","split","playerName","newPlayers","flag","forEach","player","index","name","members","availablePlayers","pIndex","team","tIndex","member","mIndex","Number","args","teamId","newTeams","newTeamMembers","biribaNotes","unfinishedGames","roundsLength","rounds","length","updatedBiribaNotes","newRound","scores","newUnfinishedGame","updateBiribaNotes","console","log","updateFile","finishedGames","uploadFile","history","cal","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","playersDiv","item","key","type","maxLength","onChange","required","unshift","placeholder","minLength","max","min","style","teamsDiv","availablePlayersDiv","availablePlayer","APIndex","selectedPlayers","to","withRouter","UnfinishedGames","enterUnfinishedGame","unfinishedGameId","updateUnfinishedGameId","unfinishedGamesDiv","unfinishedGame","uIndex","finished","maxScore","teamsTotalScore","round","rIndex","score","sIndex","biribaScore","countCardsScore","penalties","close","date","UnfinishedGame","gameFinished","toggleList","onScoreChange","resetBiribaNotes","onRoundInfoChange","hasGameFinished","moveGameToFinished","button","document","getElementById","activateClass","nextElementSibling","classList","toggle","scoreType","roundOfScore","field","roundOfInfo","ended","teamScore","newRoundsCardDealerId","cardDealer","newRoundsBiribaDealerId","gameDiv","roundDiv","maxTotalScore","teamRoundDiv","totalRoundScore","roundScoreDiv","defaultValue","checked","totalScore","round2","rIndex2","score2","sIndex2","readOnly","teamDiv","candidates","biribaDealerId","cardDealerId","biribaDealer","candidateCardNumbers","candidateCardSymbols","cardNumber","cIndex","cardSymbol","trumpNumber","gridColumn","gridRow","trumpSymbol","FinishedGame","finishedGame","finishedGameId","unselectable","disabled","History","enterFinishedGame","updateFinishedGameId","HistoryDiv","Menu","exact","path","Logout","userMail","signOutFunction","Keys","SCOPE","API_KEY","getAPIKey","CLIENT_ID","getClientID","App","handleClientLoad","window","gapi","load","initClient","client","init","then","googleAuth","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","signIn","signOut","setSigninStatus","a","currentUser","get","user","hasGrantedScopes","vt","cu","readFile","success","JSON","parse","body","catch","error","checkFileExists","Promise","resolve","reject","drive","files","list","q","execute","r","fileId","alt","boundary","delimiter","base64Data","btoa","stringify","multipartRequestBody","request","res","script","createElement","onload","src","appendChild","screen","header","undefined","ReactDOM","render","StrictMode"],"mappings":"ucA6BeA,G,mLAvBT,OACE,yBAAKC,UAAU,SACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,SACX,uDACA,0HAMJ,4BACEC,QAASC,KAAKC,MAAMC,gBADtB,2B,GAdIC,IAAMC,Y,4BCKpBC,E,kDAEJ,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CACXC,gBAAiB,EACjBC,cAAe,EACfC,QAAS,GACTC,MAAO,IAET,EAAKC,wBAA0B,EAAKA,wBAAwBC,KAA7B,gBAC/B,EAAKC,sBAAwB,EAAKA,sBAAsBD,KAA3B,gBAC7B,EAAKE,oBAAsB,EAAKA,oBAAoBF,KAAzB,gBAC3B,EAAKG,oBAAsB,EAAKA,oBAAoBH,KAAzB,gBAC3B,EAAKI,sBAAwB,EAAKA,sBAAsBJ,KAA3B,gBAC7B,EAAKK,oBAAsB,EAAKA,oBAAoBL,KAAzB,gBAC3B,EAAKM,gBAAkB,EAAKA,gBAAgBN,KAArB,gBACvB,EAAKO,qBAAuB,EAAKA,qBAAqBP,KAA1B,gBAC5B,EAAKQ,eAAiB,EAAKA,eAAeR,KAApB,gBACtB,EAAKS,gBAAkB,EAAKA,gBAAgBT,KAArB,gBAjBN,E,oEAoBKU,GACtBtB,KAAKuB,SAAS,CACZhB,gBAAiBe,EAAEE,OAAOC,MAC1BhB,QAAS,O,8CAKX,GAAGT,KAAKM,MAAMC,gBAAkB,GAAKP,KAAKM,MAAMC,iBAAmB,GAAI,CAErE,IADA,IAAIE,EAAU,GACNiB,EAAI,EAAGA,EAAI1B,KAAKM,MAAMC,gBAAiBmB,IAC7CjB,EAAQkB,KAAK,CACX,GAAMD,EACN,KAAQ,KAGZ1B,KAAKuB,SAAS,CACZd,QAASA,O,0CAKKa,GAElB,IAAIM,EAAWN,EAAEE,OAAOK,GAAGC,MAAM,KAAK,GAClCC,EAAaT,EAAEE,OAAOC,MACtBO,EAAahC,KAAKM,MAAMG,QAC5BuB,EAAWJ,GAAX,KAA+BG,EAC/B/B,KAAKuB,SAAS,CACZd,QAASuB,M,4CAISV,GACpBtB,KAAKuB,SAAS,CACZb,MAAO,GACPF,cAAec,EAAEE,OAAOC,U,4CAK1B,GAAGzB,KAAKM,MAAME,eAAiB,GAAKR,KAAKM,MAAME,eAAiBR,KAAKM,MAAMC,gBAAiB,CAE1F,IAAI0B,GAAO,EAOX,GANAjC,KAAKM,MAAMG,QAAQyB,SAAQ,SAACC,EAAQC,GACf,KAAhBD,EAAOE,OACRJ,GAAO,OAIPA,EAEF,IADA,IAAIvB,EAAQ,GACJgB,EAAI,EAAGA,EAAI1B,KAAKM,MAAME,cAAekB,IAC3ChB,EAAMiB,KAAK,CACT,GAAMD,EACN,QAAW,KAEb1B,KAAKuB,SAAS,CACZb,MAAOA,O,4CAOM,IAAD,OACpB,GAAGV,KAAKM,MAAMG,UAAY,IAAMT,KAAKM,MAAMI,QAAU,IAAMV,KAAKM,MAAMI,MAAM4B,UAAY,GAAI,CAC1F,IAAIC,EAAmB,GAcvB,OAbAvC,KAAKM,MAAMG,QAAQyB,SAAQ,SAACC,EAAQK,GAClC,IAAIP,GAAO,EACX,EAAK3B,MAAMI,MAAMwB,SAAQ,SAACO,EAAMC,GAC9BD,EAAI,QAAYP,SAAQ,SAACS,EAAQC,GAC5BC,OAAOV,EAAM,MAAYU,OAAOF,EAAM,MACvCV,GAAO,SAIVA,GACDM,EAAiBZ,KAAKQ,MAGnBI,EAET,OAAO,O,sCAGOjB,GAGd,IAAIwB,EAAOxB,EAAEE,OAAOK,GAAGC,MAAM,KACzBF,EAAWkB,EAAK,GAChBC,EAASD,EAAK,GAEdE,EAAWhD,KAAKM,MAAMI,MAC1BsC,EAASD,GAAT,QAA4BpB,KAC1B,CACE,GAAMC,IAGV5B,KAAKuB,SAAS,CACZb,MAAOsC,M,2CAIU1B,GAGnB,IACIM,EADON,EAAEE,OAAOK,GAAGC,MAAM,KACT,GAEhBkB,EAAW,GACfhD,KAAKM,MAAMI,MAAMwB,SAAQ,SAACO,EAAMC,GAC9B,IAAIO,EAAiB,GACrBR,EAAI,QAAYP,SAAQ,SAACS,EAAQC,GAC5BC,OAAOF,EAAM,MAAYE,OAAOjB,IACjCqB,EAAetB,KAAK,CAAC,GAAMgB,EAAM,QAGrCK,EAASrB,KAAK,CACZ,GAAMc,EAAI,GACV,QAAWQ,OAIfjD,KAAKuB,SAAS,CACZb,MAAOsC,M,uCAKT,GAAGhD,KAAKC,MAAMiD,YAAYC,gBAAiB,CACzC,IAAIC,EAAe,EAChBpD,KAAKC,MAAMiD,YAAYC,gBAAgBE,SACxCD,EAAepD,KAAKC,MAAMiD,YAAYC,gBAAgBE,OAAOC,QAI/D,IAAIC,EAAqBvD,KAAKC,MAAMiD,YAChCM,EAAW,CACb,MAASJ,EACT,OAAU,GACV,WAAc,EACd,aAAgBP,OAAO7C,KAAKM,MAAMG,QAAQ6C,OAAS,GACnD,YAAe,EACf,YAAe,MAEjBtD,KAAKM,MAAMI,MAAMwB,SAAQ,SAACO,EAAMC,GAC9Bc,EAASC,OAAO9B,KAAK,CACnB,OAAUc,EAAKZ,GACf,gBAAmB,EACnB,YAAe,EACf,UAAa,EACb,OAAS,OAGb,IAAI6B,EAAoB,CACtB,GAAMH,EAAmBJ,gBAAgBG,OAAS,EAClD,KAAQtD,KAAKqB,kBACb,MAASrB,KAAKM,MAAMI,MACpB,QAAWV,KAAKM,MAAMG,QACtB,OAAU,CAAC+C,GACX,UAAY,GAEdD,EAAmBJ,gBAAgBxB,KAAK+B,GACxC1D,KAAKC,MAAM0D,kBAAkBJ,GAC7BK,QAAQC,IAAI,mCACZ7D,KAAKC,MAAM6D,WAAWP,OAEjB,CAGL,IAAIC,EAAW,CACb,MAAS,EACT,OAAU,GACV,WAAc,EACd,aAAgBX,OAAO7C,KAAKM,MAAMG,QAAQ6C,OAAS,GACnD,YAAe,EACf,YAAe,MAEjBtD,KAAKM,MAAMI,MAAMwB,SAAQ,SAACO,EAAMC,GAC9Bc,EAASC,OAAO9B,KAAK,CACnB,OAAUc,EAAKZ,GACf,gBAAmB,EACnB,YAAe,EACf,UAAa,EACb,OAAS,OAGb,IAAI0B,EAAqBvD,KAAKC,MAAMiD,YACpCK,EAAqB,CACnBJ,gBAAiB,CACf,CACE,GAAM,EACN,KAAQnD,KAAKqB,kBACb,MAASrB,KAAKM,MAAMI,MACpB,QAAWV,KAAKM,MAAMG,QACtB,OAAU,CAAC+C,GACX,UAAY,IAGhBO,cAAe,IAEjB/D,KAAKC,MAAM0D,kBAAkBJ,GAC7BK,QAAQC,IAAI,8BACZ7D,KAAKC,MAAM+D,WAAWT,GAExBvD,KAAKC,MAAMgE,QAAQtC,KAAK,a,wCAIxB,IAAIuC,EAAM,IAAIC,KACVC,EAAOF,EAAIG,cACXC,EAAQJ,EAAIK,WAAa,EAC7BD,EAASA,EAAQ,GAAM,IAAMA,EAAQA,EACrC,IAAIE,EAAMN,EAAIO,UACdD,EAAOA,EAAM,GAAM,IAAMA,EAAMA,EAC/B,IAAIE,EAAQR,EAAIS,WAAa,EAC7BD,EAASA,EAAQ,GAAM,IAAMA,EAAQA,EACrC,IAAIE,EAAUV,EAAIW,aAElB,OAAOL,EAAI,IAAIF,EAAM,IAAIF,EAAK,IAAIM,EAAM,KADxCE,EAAWA,EAAU,GAAM,IAAMA,EAAUA,K,+BAInC,IAAD,OAEDE,EAAa,GACjB,GAAG9E,KAAKM,MAAMG,UAAY,GAAI,CAC5B,IAAIwB,GAAO,EACXjC,KAAKM,MAAMG,QAAQyB,SAAQ,SAAC6C,EAAM3C,GAChCH,GAAO,EACP6C,EAAWnD,KACT,yBAAK7B,UAAU,iBAAiBkF,IAAK,aAAa5C,GAChD,uBAAGtC,UAAU,SAAb,WAA8BsC,EAAM,GACpC,2BACE6C,KAAK,OACLC,UAAU,KACVrD,GAAI,cAAcO,EAClBX,MAAO,EAAKnB,MAAMG,QAAQ2B,GAAnB,KACP+C,SAAU,EAAKrE,oBACfsE,UAAU,IAEZ,wCAIHnD,IACD6C,EAAWO,QAAQ,yBAAKvF,UAAU,OAAOkF,IAAI,qBAC7CF,EAAWnD,KACL,yBAAK7B,UAAU,UAAUkF,IAAK,kBAC5B,2BACEC,KAAK,SACLK,YAAY,IACZJ,UAAU,IACVK,UAAU,IACVC,IAAKxF,KAAKM,MAAMC,gBAChBkF,IAAI,IACJhE,MAAOzB,KAAKM,MAAME,cAClB2E,SAAUnF,KAAKgB,sBACfoE,UAAU,IAEZ,8CACA,4BACEH,KAAK,SACLS,MAAO,CAAC,OAAS,QACjB5F,UAAU,wBACVC,QAASC,KAAKe,qBAJhB,uCAYZ,IAAI4E,EAAW,GACf,GAAG3F,KAAKM,MAAMI,QAAU,GAAI,CAC1B,IAAIuB,GAAO,EAEXjC,KAAKM,MAAMI,MAAMwB,SAAQ,SAACO,EAAML,GAC9BH,GAAO,EAEP,IAAIM,EAAmB,EAAKtB,sBACxB2E,EAAsB,GAC1BrD,EAAiBL,SAAQ,SAAC2D,EAAiBC,GACzCF,EAAoBjE,KAClB,4BACEE,GAAI,mBAAmBgE,EAAe,GAAO,IAAIpD,EAAI,GACrD1C,QAAS,EAAKmB,gBACd8D,IAAK,mBAAmBc,EACxBhG,UAAU,OACP+F,EAAe,UAIrBtD,IAAqB,IAA2B,OAArBA,GAAyD,IAA5BA,EAAiBe,SAC1EsC,EAAsB,uBAAG9F,UAAU,OAAb,8BAGxB,IAAIiG,EAAkB,GACtBtD,EAAKH,QAAQJ,SAAQ,SAACS,EAAQC,GAC5BmD,EAAgBpE,KACd,4BACEE,GAAI,kBAAkBc,EAAM,GAAO,IAAIF,EAAI,GAC3C1C,QAAS,EAAKoB,qBACd6D,IAAK,kBAAkBpC,EACvB9C,UAAU,OACP,EAAKQ,MAAMG,QAAQkC,EAAM,IAAzB,UAIqB,IAA3BoD,EAAgBzC,SACjByC,EAAkB,uBAAGjG,UAAU,OAAb,mBAGpB6F,EAAShE,KACP,yBAAK7B,UAAU,iBAAiBkF,IAAK,WAAW5C,GAC9C,uBAAGtC,UAAU,SAAb,SAA4BsC,EAAM,GAClC,yBAAKtC,UAAU,mBACb,yBAAKA,UAAU,eACb,+CACCiG,GAEH,yBAAKjG,UAAU,eACb,gDACC8F,SAMR3D,IACD0D,EAASN,QAAQ,yBAAKvF,UAAU,OAAOkF,IAAI,mBAC3CW,EAAShE,KACP,yBAAK7B,UAAU,UAAUkF,IAAK,gBAC5B,4BACEC,KAAK,SACLS,MAAO,CAAC,OAAS,OAAQ,gBAAkB,WAC3C5F,UAAU,wBACVC,QAASC,KAAKoB,gBAJhB,uBAYR,OACE,yBAAKtB,UAAU,WACb,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,UACf,uCACE,kBAAC,IAAD,CAAMkG,GAAG,WACP,uBAAGlG,UAAU,uBAIjB,yBAAKA,UAAU,SAEf,yBAAKA,UAAU,WACb,2BACEmF,KAAK,SACLK,YAAY,IACZJ,UAAU,IACVK,UAAU,IACVC,IAAI,KACJC,IAAI,IACJhE,MAAOzB,KAAKM,MAAMC,gBAClB4E,SAAUnF,KAAKW,0BAEjB,gDACA,4BACEsE,KAAK,SACLnF,UAAU,wBACVC,QAASC,KAAKa,uBAHhB,6BAQHiE,EAEAa,Q,GAjZSxF,IAAMC,WA0Zb6F,cAAW5F,GC1ZpB6F,G,wDAEJ,WAAYjG,GAAO,IAAD,8BAChB,cAAMA,IAEDkG,oBAAsB,EAAKA,oBAAoBvF,KAAzB,gBAHX,E,gEAMEU,GAClB,IAAI8E,EAAmB9E,EAAEE,OAAOK,GAAGC,MAAM,KAAK,GAC9C9B,KAAKC,MAAMoG,uBAAuBD,GAClCpG,KAAKC,MAAMgE,QAAQtC,KAAK,mC,+BAGhB,IAAD,OAEH2E,EAAqB,GA8CzB,OA5CGtG,KAAKC,MAAMiD,aAAelD,KAAKC,MAAMiD,YAAYC,iBAClDnD,KAAKC,MAAMiD,YAAYC,gBAAgBjB,SAAQ,SAACqE,EAAgBC,GAC9D,IAAID,EAAeE,SAAU,CAE3B,IAAIC,GAAY,EAChBH,EAAe7F,MAAMwB,SAAQ,SAACO,EAAMC,GAClC,IAAIiE,EAAkB,EACtBJ,EAAelD,OAAOnB,SAAQ,SAAC0E,EAAOC,GACpCD,EAAMnD,OAAOvB,SAAQ,SAAC4E,EAAOC,GACxBlE,OAAOJ,EAAKZ,MAAQgB,OAAOiE,EAAM/D,UAClC4D,GAAmB9D,OAAOiE,EAAME,aAAenE,OAAOiE,EAAMG,iBAAmBpE,OAAOiE,EAAMI,WACzFJ,EAAMK,QACPR,GAAmB,YAKxBD,EAAWC,IACZD,EAAWC,MAIfL,EAAmB3E,KACjB,yBAAK7B,UAAU,sBAAsBkF,IAAK,sBAAsBwB,EAC5D3E,GAAI,kBAAkB2E,EAAQzG,QAAS,EAAKoG,qBAC9C,uBAAGrG,UAAU,SAAb,SAA4B0G,GAC5B,yBAAK1G,UAAU,UACb,uBAAGA,UAAU,mBACb,uBAAGA,UAAU,QAAQyG,EAAea,OAEtC,uCAAab,EAAe9F,QAAQ6C,QACpC,yCAAeoD,GACf,qCAAWH,EAAe7F,MAAM4C,QAChC,6CAAmBiD,EAAelD,OAAOC,cAOlB,IAA9BgD,EAAmBhD,SACpBgD,EAAqB,6DAIrB,yBAAKxG,UAAU,mBACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,UACb,+CACA,kBAAC,IAAD,CAAMkG,GAAG,WACP,uBAAGlG,UAAU,uBAIjB,yBAAKA,UAAU,SAEf,yBAAKA,UAAU,WACZwG,IAZP,S,GA/DwBnG,IAAMC,YAoFrB6F,cAAWC,GCpFpBmB,G,wDAEJ,WAAYpH,GAAO,IAAD,8BAChB,cAAMA,IACDK,MAAQ,CACX4C,YAAa,EAAKjD,MAAMiD,YACxBoE,cAAc,GAEhB,EAAKC,WAAa,EAAKA,WAAW3G,KAAhB,gBAClB,EAAK4G,cAAgB,EAAKA,cAAc5G,KAAnB,gBACrB,EAAK+C,kBAAoB,EAAKA,kBAAkB/C,KAAvB,gBACzB,EAAK6G,iBAAmB,EAAKA,iBAAiB7G,KAAtB,gBACxB,EAAK8G,kBAAoB,EAAKA,kBAAkB9G,KAAvB,gBACzB,EAAK4C,SAAW,EAAKA,SAAS5C,KAAd,gBAChB,EAAK+G,gBAAkB,EAAKA,gBAAgB/G,KAArB,gBACvB,EAAKgH,mBAAqB,EAAKA,mBAAmBhH,KAAxB,gBAbV,E,gEAiBhBZ,KAAK2H,oB,iCAGIrG,GACT,IAAIuG,EAASC,SAASC,eAAezG,EAAEE,OAAOK,IAC1CmG,EAAgB1G,EAAEE,OAAOK,GAAGC,MAAM,KAAK,GAC3C+F,EAAOI,mBAAmBC,UAAUC,OAAOH,K,oCAG/B1G,GAEZ,IAAIwB,EAAOxB,EAAEE,OAAOK,GAAGC,MAAM,KACzBsG,EAAYtF,EAAK,GACjBuF,EAAevF,EAAK,GACpBC,EAASD,EAAK,GAEdI,EAAclD,KAAKM,MAAM4C,YAC7BA,EAAYC,gBAAgBnD,KAAKC,MAAMmG,kBAAkB/C,OAAOnB,SAAQ,SAAC0E,EAAOC,GAC3EhE,OAAO+D,EAAMA,SAAW/D,OAAOwF,IAChCzB,EAAMnD,OAAOvB,SAAQ,SAAC4E,EAAOC,GACxBlE,OAAOiE,EAAM/D,UAAYF,OAAOE,KAChB,gBAAdqF,EACDtB,EAAME,YAAc1F,EAAEE,OAAOC,MACN,oBAAd2G,EACTtB,EAAMG,gBAAkB3F,EAAEE,OAAOC,MACV,cAAd2G,EACTtB,EAAMI,UAAY5F,EAAEE,OAAOC,MACJ,UAAd2G,IACTtB,EAAMK,OAASL,EAAMK,cAO/BnH,KAAKuB,SAAS,CACZ2B,YAAaA,M,wCAIC5B,GAEhB,IAAIwB,EAAOxB,EAAEE,OAAOK,GAAGC,MAAM,KACzBwG,EAAQxF,EAAK,GACbyF,EAAczF,EAAK,GACnBI,EAAclD,KAAKM,MAAM4C,YAC7BA,EAAYC,gBAAgBnD,KAAKC,MAAMmG,kBAAkB/C,OAAOnB,SAAQ,SAAC0E,EAAOC,GAC3EhE,OAAO+D,EAAMA,SAAW/D,OAAO0F,KAChC3B,EAAM0B,GAAShH,EAAEE,OAAOC,UAI5BzB,KAAKuB,SAAS,CACZ2B,YAAaA,M,wCAIE,IAAD,OACZsF,GAAQ,EACRtF,EAAclD,KAAKM,MAAM4C,YAC7BA,EAAYC,gBAAgBnD,KAAKC,MAAMmG,kBAAkB1F,MAAMwB,SAAQ,SAACO,EAAMC,GAC5E,IAAI+F,EAAY,EAChBvF,EAAYC,gBAAgB,EAAKlD,MAAMmG,kBAAkB/C,OAAOnB,SAAQ,SAAC0E,EAAOC,GAC9ED,EAAMnD,OAAOvB,SAAQ,SAAC4E,EAAOC,GACxBlE,OAAOiE,EAAM/D,UAAYF,OAAOJ,EAAKZ,MACtC4G,GAAa5F,OAAOiE,EAAME,aAAenE,OAAOiE,EAAMG,iBAClDpE,OAAOiE,EAAMI,WACdJ,EAAMK,QACPsB,GAAa,YAKlBA,GAAa,OACdD,GAAQ,MAGZxI,KAAKuB,SAAS,CACZ+F,aAAckB,M,2CAKhB,IAAItF,EAAclD,KAAKM,MAAM4C,YAC7BA,EAAYC,gBAAgBnD,KAAKC,MAAMmG,kBAAkBK,UAAW,EACpEvD,EAAYa,cAAcpC,KACxBuB,EAAYC,gBAAgBnD,KAAKC,MAAMmG,mBAGzCpG,KAAKuB,SAAS,CACZ2B,YAAaA,IAEflD,KAAK2D,kBAAkBT,GACvBlD,KAAKC,MAAMgE,QAAQtC,KAAK,a,0CAIxB3B,KAAKC,MAAM0D,kBAAkB3D,KAAKM,MAAM4C,aACxClD,KAAK2H,kBACL/D,QAAQC,IAAI,oBACZ7D,KAAKC,MAAM6D,WAAW9D,KAAKM,MAAM4C,e,yCAIjClD,KAAKuB,SAAS,CACZ2B,YAAalD,KAAKC,MAAMiD,gB,iCAK1B,IAAIA,EAAclD,KAAKM,MAAM4C,YAEzB3C,EAAkB2C,EAAYC,gBAAgBnD,KAAKC,MAAMmG,kBAAkB3F,QAAQ6C,OAGnFF,EAAeF,EAAYC,gBAAgBnD,KAAKC,MAAMmG,kBAAkB/C,OAAOC,OAI/EoF,EAHexF,EAAYC,gBAAgBnD,KAAKC,MAAMmG,kBAAkB/C,OAAOD,EAAa,GAC7FuF,WAEwC,EACxCD,GAAyBnI,IAC1BmI,EAAwB,GAG1B,IAAIE,EAA0BF,EAAwB,EACnDE,EAA0B,IAC3BA,EAA0BrI,EAAkB,GAG9C,IAAIiD,EAAW,CACb,MAASJ,EAAa,EACtB,OAAU,GACV,WAAcP,OAAO6F,GACrB,aAAgB7F,OAAO+F,GACvB,YAAe,EACf,YAAe,MAEjB1F,EAAYC,gBAAgBnD,KAAKC,MAAMmG,kBAAkB1F,MAAMwB,SAAQ,SAACO,EAAMC,GAC5Ec,EAASC,OAAO9B,KAAK,CACnB,OAAUc,EAAKZ,GACf,gBAAmB,EACnB,YAAe,EACf,UAAa,EACb,OAAS,OAIbqB,EAAYC,gBAAgBnD,KAAKC,MAAMmG,kBAAkB/C,OAAO1B,KAAK6B,GAErExD,KAAKuB,SAAS,CACZ2B,YAAaA,IAEflD,KAAK2D,kBAAkBT,K,+BAGf,IAAD,OAGH2F,EAAU,GACVtC,EAAiBvG,KAAKM,MAAM4C,YAAYC,gBAAgBnD,KAAKC,MAAMmG,kBAInE0C,GAHcvC,EAAelD,OAAOC,OAGzB,IACfiD,EAAelD,OAAOnB,SAAQ,SAAC0E,EAAOC,GAIpC,IAAIkC,GAAiB,EAEjBC,EAAe,GACfC,EAAkB,EACtB1C,EAAe7F,MAAMwB,SAAQ,SAACO,EAAMC,GAGlC,IAAIwG,EAAgB,GACpBtC,EAAMnD,OAAOvB,SAAQ,SAAC4E,EAAOC,GACxBlE,OAAOiE,EAAM/D,UAAYF,OAAOJ,EAAKZ,MACtCoH,EAAkBpG,OAAOiE,EAAME,aAAenE,OAAOiE,EAAMG,iBAAmBpE,OAAOiE,EAAMI,WAC3FgC,EAAcvH,KACZ,yBAAK7B,UAAU,kBAAkBkF,IAAK,gBAAgBtC,EAAOqE,GAC3D,2CACA,6BACE,2CACA,2BACElF,GAAI,eAAe+E,EAAMA,MAAM,IAAIE,EAAM/D,OACzCkC,KAAK,SACLQ,IAAI,IACJ0D,aAAcrC,EAAME,YACpB7B,SAAU,EAAKqC,iBAGnB,6BACE,gDACA,2BACE3F,GAAI,mBAAmB+E,EAAMA,MAAM,IAAIE,EAAM/D,OAC7CkC,KAAK,SACLQ,IAAI,IACJD,IAAI,OACJ2D,aAAcrC,EAAMG,gBACpB9B,SAAU,EAAKqC,iBAGnB,6BACE,wCACA,2BACE3F,GAAI,aAAa+E,EAAMA,MAAM,IAAIE,EAAM/D,OACvCkC,KAAK,SACLQ,IAAI,IACJ0D,aAAcrC,EAAMG,gBACpB9B,SAAU,EAAKqC,iBAGnB,6BACE,oCACA,2BACE3F,GAAI,SAAS+E,EAAMA,MAAM,IAAIE,EAAM/D,OACnCkC,KAAK,WACLmE,QAAStC,EAAMK,MACfhC,SAAU,EAAKqC,uBAQ3B,IAAI6B,EAAa,EAEjB9C,EAAelD,OAAOnB,SAAQ,SAACoH,EAAQC,GACrCD,EAAO7F,OAAOvB,SAAQ,SAACsH,EAAQC,GAC1B5G,OAAOJ,EAAKZ,MAAQgB,OAAO2G,EAAOzG,UACnCsG,GAAcxG,OAAO2G,EAAOxC,aAAenE,OAAO2G,EAAOvC,iBAAmBpE,OAAO2G,EAAOtC,WACvFsC,EAAOrC,QACRkC,GAAc,YAMnBN,EAAgBM,IACjBN,EAAgBM,GAGlBH,EAAcvH,KACZ,yBAAK7B,UAAU,kBAAkBkF,IAAK,cAActC,EAAOmE,GACzD,2CACE,6BACE,gDACA,2BACE7B,IAAKiE,EACLhE,KAAK,SACLQ,IAAI,IACJiE,UAAU,EACVP,aAAcF,KAGlB,6BACE,0CACA,2BACEjE,IAAKqE,EACLpE,KAAK,SACLQ,IAAI,IACJiE,UAAU,EACVP,aAAcE,OAOxB,IAAIM,EAAU,GACVrH,EAAU,GACdG,EAAKH,QAAQJ,SAAQ,SAACS,EAAQC,GAC5BN,EAAQX,KACN,yBAAKqD,IAAK,SAASpC,EAAOF,GACvB6D,EAAe9F,QAAQkC,EAAOd,IAAIQ,UAIzCsH,EAAQhI,KACN,yBAAK7B,UAAU,WAAWkF,IAAK,UAAU6B,EAAOnE,GAC9C,4BACEb,GAAI,wBAAwBgF,EAAO,IAAInE,EACvC3C,QAAS,EAAKwH,YAFhB,QAIQ9E,EAAKZ,GAJb,KAImBwH,EAJnB,KAMA,yBAAKvJ,UAAU,iBACb,yBAAKA,UAAU,oBACb,sCACA,yBAAKA,UAAU,WACZwC,IAGJ4G,KAKPF,EAAarH,KACX,yBAAK7B,UAAU,iBAAiBkF,IAAK,eAAe6B,EAAOnE,GACxDiH,OAMP,IAAIC,EAAa,GACbC,EAAiB,GACjBC,EAAe,GACnBvD,EAAe9F,QAAQyB,SAAQ,SAACC,EAAQK,GACnCL,EAAON,KAAO+E,EAAMmD,eACrBF,EAAiB1H,EAAON,IAEvBM,EAAON,KAAO+E,EAAM+B,aACrBmB,EAAe3H,EAAON,IAExB+H,EAAWjI,KACT,4BAAQqD,IAAK,cAAcxC,EAAOqE,EAAQpF,MAAOU,EAAON,IAAKM,EAAOE,UAKxE,IAEI2H,EAAuB,GACvBC,EAAuB,GAHT,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,KAK9E/H,SAAQ,SAACgI,EAAYC,GAC/BH,EAAqBrI,KACnB,4BAAQqD,IAAK,wBAAwB6B,EAAOsD,EAAQ1I,MAAOyI,GAAaA,OAN1D,CAAC,KAAM,KAAM,KAAM,KAAM,MAU/BhI,SAAQ,SAACkI,EAAYD,GAC/BF,EAAqBtI,KACnB,4BAAQqD,IAAK,wBAAwBmF,EAAOtD,EAAQpF,MAAO2I,GAAaA,OAI5EtB,EAASnH,KACP,yBAAK7B,UAAU,YAAYkF,IAAK,WAAW6B,GACzC,4BACEhF,GAAI,0BAA0BgF,EAC9B9G,QAAS,EAAKwH,YAFhB,SAISX,EAAMA,OAEf,yBAAK9G,UAAU,mBACZkJ,EACD,yBAAKlJ,UAAU,cACb,yBAAKA,UAAU,QACb,4CACA,4BACE+B,GAAI,gBAAgB+E,EAAMA,MAC1BzB,SAAU,EAAKuC,kBACfyB,aAAcU,GAEbD,IAGL,yBAAK9J,UAAU,QACb,0CACA,4BACE+B,GAAI,cAAc+E,EAAMA,MACxBzB,SAAU,EAAKuC,kBACfyB,aAAcW,GAEbF,IAGL,yBAAK9J,UAAU,QACb,oCACA,4BACEqJ,aAAcvC,EAAMyD,YACpBxI,GAAI,eAAe+E,EAAMA,MACzBlB,MAAO,CAAC4E,WAAW,MAAOC,QAAQ,OAClCpF,SAAU,EAAKuC,mBAEdsC,GAEH,4BACEb,aAAcvC,EAAM4D,YACpB3I,GAAI,eAAe+E,EAAMA,MACzBlB,MAAO,CAAC4E,WAAW,MAAOC,QAAQ,OAClCpF,SAAU,EAAKuC,mBAEduC,KAIP,yBAAKnK,UAAU,eAAekF,IAAK,cACnC,4BACEjF,QAAS,EAAK4D,mBADhB,gBAKA,4BACE5D,QAAS,EAAK0H,kBADhB,qBAWR,IAAII,EAAS,4BACG7C,IAAK,qBAAqBhF,KAAKM,MAAMgH,aACrCvH,QAASC,KAAKwD,UAEd,uBAAG1D,UAAU,gBAqB7B,OAnBGE,KAAKM,MAAMgH,eACVO,EAAS,4BACG7C,IAAK,qBAAqBhF,KAAKM,MAAMgH,aACrCvH,QAASC,KAAK4H,mBACd9H,UAAU,6BAHb,kCASb+I,EAAQlH,KACN,yBAAK7B,UAAU,WAAWkF,IAAK,WAC5B8D,EACD,yBAAKhJ,UAAU,gBACZ+H,KAML,yBAAK/H,UAAU,kBACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,UACb,8CAAoBE,KAAKC,MAAMmG,kBAC/B,kBAAC,IAAD,CAAMJ,GAAG,4BACP,uBAAGlG,UAAU,uBAIjB,yBAAKA,UAAU,SAEf,yBAAKA,UAAU,WACZ+I,IAZP,S,GAtcuB1I,IAAMC,YA2dpB6F,cAAWoB,GC3dpBoD,G,wDAEJ,WAAYxK,GAAO,IAAD,8BAChB,cAAMA,IACDK,MAAQ,CACX4C,YAAa,EAAKjD,MAAMiD,aAE1B,EAAKqE,WAAa,EAAKA,WAAW3G,KAAhB,gBALF,E,uDAQPU,GACT,IAAIuG,EAASC,SAASC,eAAezG,EAAEE,OAAOK,IAC1CmG,EAAgB1G,EAAEE,OAAOK,GAAGC,MAAM,KAAK,GAC3C+F,EAAOI,mBAAmBC,UAAUC,OAAOH,K,+BAGnC,IAAD,OAGHa,EAAU,GACV6B,EAAe1K,KAAKM,MAAM4C,YAAYa,cAAc/D,KAAKC,MAAM0K,gBAG/D7B,EAAW,GAiPf,OAhPA4B,EAAarH,OAAOnB,SAAQ,SAAC0E,EAAOC,GAIlC,IAAIkC,GAAiB,EAEjBC,EAAe,GACfC,EAAkB,EACtByB,EAAahK,MAAMwB,SAAQ,SAACO,EAAMC,GAGhC,IAAIwG,EAAgB,GACpBtC,EAAMnD,OAAOvB,SAAQ,SAAC4E,EAAOC,GACxBlE,OAAOiE,EAAM/D,UAAYF,OAAOJ,EAAKZ,MACtCoH,EAAkBpG,OAAOiE,EAAME,aAAenE,OAAOiE,EAAMG,iBAAmBpE,OAAOiE,EAAMI,WAC3FgC,EAAcvH,KACZ,yBAAK7B,UAAU,kBAAkBkF,IAAK,gBAAgBtC,EAAOqE,GAC3D,2CACA,6BACE,2CACA,2BACElF,GAAI,eAAe+E,EAAMA,MAAM,IAAIE,EAAM/D,OACzCkC,KAAK,SACLQ,IAAI,IACJ0D,aAAcrC,EAAME,YACpB0C,UAAU,KAGd,6BACE,gDACA,2BACE7H,GAAI,mBAAmB+E,EAAMA,MAAM,IAAIE,EAAM/D,OAC7CkC,KAAK,SACLQ,IAAI,IACJD,IAAI,OACJ2D,aAAcrC,EAAMG,gBACpByC,UAAU,KAGd,6BACE,wCACA,2BACE7H,GAAI,aAAa+E,EAAMA,MAAM,IAAIE,EAAM/D,OACvCkC,KAAK,SACLQ,IAAI,IACJ0D,aAAcrC,EAAMG,gBACpByC,UAAU,KAGd,6BACE,oCACA,2BACE7H,GAAI,SAAS+E,EAAMA,MAAM,IAAIE,EAAM/D,OACnCkC,KAAK,WACLmE,QAAStC,EAAMK,MACfyD,aAAc,OACdlB,UAAU,WAQtB,IAAIL,EAAa,EAEjBqB,EAAarH,OAAOnB,SAAQ,SAACoH,EAAQC,GACnCD,EAAO7F,OAAOvB,SAAQ,SAACsH,EAAQC,GAC1B5G,OAAOJ,EAAKZ,MAAQgB,OAAO2G,EAAOzG,UACnCsG,GAAcxG,OAAO2G,EAAOxC,aAAenE,OAAO2G,EAAOvC,iBAAmBpE,OAAO2G,EAAOtC,WACvFsC,EAAOrC,QACRkC,GAAc,YAMnBN,EAAgBM,IACjBN,EAAgBM,GAGlBH,EAAcvH,KACZ,yBAAK7B,UAAU,kBAAkBkF,IAAK,cAActC,EAAOmE,GACzD,2CACE,6BACE,gDACA,2BACE7B,IAAKiE,EACLhE,KAAK,SACLQ,IAAI,IACJiE,UAAU,EACVP,aAAcF,KAGlB,6BACE,0CACA,2BACEjE,IAAKqE,EACLpE,KAAK,SACLQ,IAAI,IACJiE,UAAU,EACVP,aAAcE,OAOxB,IAAIM,EAAU,GACVrH,EAAU,GACdG,EAAKH,QAAQJ,SAAQ,SAACS,EAAQC,GAC5BN,EAAQX,KACN,yBAAKqD,IAAK,SAASpC,EAAOF,GACvBgI,EAAajK,QAAQkC,EAAOd,IAAIQ,UAIvCsH,EAAQhI,KACN,yBAAK7B,UAAU,WAAWkF,IAAK,UAAU6B,EAAOnE,GAC9C,4BACEb,GAAI,wBAAwBgF,EAAO,IAAInE,EACvC3C,QAAS,EAAKwH,YAFhB,QAIQ9E,EAAKZ,GAJb,KAImBwH,EAJnB,KAMA,yBAAKvJ,UAAU,iBACb,yBAAKA,UAAU,oBACb,sCACA,yBAAKA,UAAU,WACZwC,IAGJ4G,KAKPF,EAAarH,KACX,yBAAK7B,UAAU,iBAAiBkF,IAAK,eAAe6B,EAAOnE,GACxDiH,OAMP,IAAIC,EAAa,GACbC,EAAiB,GACjBC,EAAe,GACnBY,EAAajK,QAAQyB,SAAQ,SAACC,EAAQK,GACjCL,EAAON,KAAO+E,EAAMmD,eACrBF,EAAiB1H,EAAON,IAEvBM,EAAON,KAAO+E,EAAM+B,aACrBmB,EAAe3H,EAAON,IAExB+H,EAAWjI,KACT,4BAAQqD,IAAK,cAAcxC,EAAOqE,EAAQpF,MAAOU,EAAON,IAAKM,EAAOE,UAKxE,IAEI2H,EAAuB,GACvBC,EAAuB,GAHT,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,KAK9E/H,SAAQ,SAACgI,EAAYC,GAC/BH,EAAqBrI,KACnB,4BAAQqD,IAAK,wBAAwB6B,EAAOsD,EAAQ1I,MAAOyI,GAAaA,OAN1D,CAAC,KAAM,KAAM,KAAM,KAAM,MAU/BhI,SAAQ,SAACkI,EAAYD,GAC/BF,EAAqBtI,KACnB,4BAAQqD,IAAK,wBAAwBmF,EAAOtD,EAAQpF,MAAO2I,GAAaA,OAI5EtB,EAASnH,KACP,yBAAK7B,UAAU,YAAYkF,IAAK,WAAW6B,GACzC,4BACEhF,GAAI,0BAA0BgF,EAC9B9G,QAAS,EAAKwH,YAFhB,SAISX,EAAMA,OAEf,yBAAK9G,UAAU,mBACZkJ,EACD,yBAAKlJ,UAAU,cACb,yBAAKA,UAAU,QACb,4CACA,4BACE+B,GAAI,gBAAgB+E,EAAMA,MAC1BuC,aAAcU,EACdgB,UAAU,GAETjB,IAGL,yBAAK9J,UAAU,QACb,0CACA,4BACE+B,GAAI,cAAc+E,EAAMA,MACxBuC,aAAcW,EACde,UAAU,GAETjB,IAGL,yBAAK9J,UAAU,QACb,oCACA,4BACEqJ,aAAcvC,EAAMyD,YACpBxI,GAAI,eAAe+E,EAAMA,MACzBlB,MAAO,CAAC4E,WAAW,MAAOC,QAAQ,OAClCM,UAAU,GAETb,GAEH,4BACEb,aAAcvC,EAAM4D,YACpB3I,GAAI,eAAe+E,EAAMA,MACzBlB,MAAO,CAAC4E,WAAW,MAAOC,QAAQ,OAClCM,UAAU,GAETZ,WASfpB,EAAQlH,KACN,yBAAK7B,UAAU,WAAWkF,IAAK,WAC5B8D,IAKH,yBAAKhJ,UAAU,gBACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,UACb,8CAAoBE,KAAKC,MAAM0K,gBAC/B,kBAAC,IAAD,CAAM3E,GAAG,mBACP,uBAAGlG,UAAU,uBAIjB,yBAAKA,UAAU,SAEf,yBAAKA,UAAU,WACZ+I,IAZP,S,GAzQqB1I,IAAMC,YA8RlB6F,cAAWwE,GC9RpBK,G,wDAEJ,WAAY7K,GAAO,IAAD,8BAChB,cAAMA,IAED8K,kBAAoB,EAAKA,kBAAkBnK,KAAvB,gBAHT,E,8DAMAU,GAChB,IAAIqJ,EAAiBrJ,EAAEE,OAAOK,GAAGC,MAAM,KAAK,GAC5C9B,KAAKC,MAAM+K,qBAAqBL,GAChC3K,KAAKC,MAAMgE,QAAQtC,KAAK,0B,+BAGhB,IAAD,OAEHsJ,EAAa,GA2CjB,OAzCGjL,KAAKC,MAAMiD,aAAelD,KAAKC,MAAMiD,YAAYa,eAClD/D,KAAKC,MAAMiD,YAAYa,cAAc7B,SAAQ,SAACwI,EAAclE,GAC1D,GAAGkE,EAAajE,SAAU,CAExB,IAAIC,GAAY,EAChBgE,EAAahK,MAAMwB,SAAQ,SAACO,EAAMC,GAChC,IAAIiE,EAAkB,EACtB+D,EAAarH,OAAOnB,SAAQ,SAAC0E,EAAOC,GAClCD,EAAMnD,OAAOvB,SAAQ,SAAC4E,EAAOC,GACxBlE,OAAOJ,EAAKZ,MAAQgB,OAAOiE,EAAM/D,UAClC4D,GAAmB9D,OAAOiE,EAAME,aAAenE,OAAOiE,EAAMG,wBAI/DP,EAAWC,IACZD,EAAWC,MAIfsE,EAAWtJ,KACT,yBAAK7B,UAAU,oBAAoBkF,IAAK,oBAAoBwB,EACxD3E,GAAI,gBAAgB2E,EAAQzG,QAAS,EAAKgL,mBAC5C,uBAAGjL,UAAU,SAAb,SAA4B0G,GAC5B,yBAAK1G,UAAU,UACb,uBAAGA,UAAU,mBACb,uBAAGA,UAAU,QAAQ4K,EAAatD,OAEpC,uCAAasD,EAAajK,QAAQ6C,QAClC,yCAAeoD,GACf,qCAAWgE,EAAahK,MAAM4C,QAC9B,6CAAmBoH,EAAarH,OAAOC,cAOxB,IAAtB2H,EAAW3H,SACZ2H,EAAa,2DAIb,yBAAKnL,UAAU,WACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,UACb,sCACA,kBAAC,IAAD,CAAMkG,GAAG,WACP,uBAAGlG,UAAU,uBAIjB,yBAAKA,UAAU,SAEf,yBAAKA,UAAU,WACZmL,IAZP,S,GA5DgB9K,IAAMC,YAiFb6F,cAAW6E,GCaXI,E,kDArFb,WAAYjL,GAAO,uCACXA,G,qDAIJ,OACE,kBAAC,IAAD,KACE,yBAAKH,UAAU,QAEb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqL,OAAK,EAACC,KAAK,WAChB,yBAAKtL,UAAU,kBACX,yBAAKA,UAAU,SACX,qCAEJ,kBAAC,IAAD,CAAMkG,GAAG,oBACL,uBAAGlG,UAAU,eACb,8CAEJ,kBAAC,IAAD,CAAMkG,GAAG,4BACL,uBAAGlG,UAAU,eACb,qDAEJ,kBAAC,IAAD,CAAMkG,GAAG,mBACL,uBAAGlG,UAAU,oBACb,yCAKV,kBAAC,IAAD,CAAOqL,OAAK,EAACC,KAAK,oBAChB,kBAAC,EAAD,CACElI,YAAalD,KAAKC,MAAMiD,YACxBS,kBAAmB3D,KAAKC,MAAM0D,kBAC9BK,WAAYhE,KAAKC,MAAM+D,WACvBF,WAAY9D,KAAKC,MAAM6D,cAI3B,kBAAC,IAAD,CAAOqH,OAAK,EAACC,KAAK,4BAChB,kBAAC,EAAD,CACElI,YAAalD,KAAKC,MAAMiD,YACxBS,kBAAmB3D,KAAKC,MAAM0D,kBAC9BK,WAAYhE,KAAKC,MAAM+D,WACvBF,WAAY9D,KAAKC,MAAM6D,WACvBuC,uBAAwBrG,KAAKC,MAAMoG,uBACnCD,iBAAkBpG,KAAKC,MAAMmG,oBAIjC,kBAAC,IAAD,CAAO+E,OAAK,EAACC,KAAK,mBAChB,kBAAC,EAAD,CACElI,YAAalD,KAAKC,MAAMiD,YACxByH,eAAgB3K,KAAKC,MAAM0K,eAC3BK,qBAAsBhL,KAAKC,MAAM+K,wBAIrC,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,iCAChB,kBAAC,EAAD,CACEhF,iBAAkBpG,KAAKC,MAAMmG,iBAC7BlD,YAAalD,KAAKC,MAAMiD,YACxBS,kBAAmB3D,KAAKC,MAAM0D,kBAC9BK,WAAYhE,KAAKC,MAAM+D,WACvBF,WAAY9D,KAAKC,MAAM6D,cAI3B,kBAAC,IAAD,CAAOqH,OAAK,EAACC,KAAK,wBAChB,kBAAC,EAAD,CACEJ,qBAAsBhL,KAAKC,MAAM+K,qBACjCL,eAAgB3K,KAAKC,MAAM0K,eAC3BzH,YAAalD,KAAKC,MAAMiD,sB,GA1EvB/C,IAAMC,WCSViL,G,6KAlBT,OACE,yBAAKvL,UAAU,UACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,QACb,uBAAGA,UAAU,eAAe,2BAAIE,KAAKC,MAAMqL,WAE7C,4BACEvL,QAASC,KAAKC,MAAMsL,iBAElB,uBAAGzL,UAAU,0B,GAZZK,IAAMC,YCKVoL,E,yGANT,MAAO,4C,oCAIP,MAAO,+E,KCEXC,EAAQ,wCAERC,EAAUF,EAAKG,YACfC,EAAYJ,EAAKK,cAuaNC,E,kDAnab,aAAe,IAAD,8BACZ,gBA6MFC,iBAAmB,WACjBC,OAAOC,KAAKC,KAAK,eAAgB,EAAKC,aA/M1B,EAkNdA,WAAa,WACX,IACEH,OAAOC,KAAKG,OAAOC,KAAK,CACpB,OAAUX,EACV,SAAYE,EACZ,MAASH,EACT,cAAiB,CA9NP,gEA+NTa,MAAK,WACN,EAAK/K,SAAS,CACZgL,WAAYP,OAAOC,KAAKO,MAAMC,oBAEhC,EAAKnM,MAAMiM,WAAWG,WAAWC,OAAO,EAAKC,uBAEjD,MAAMtL,GACNsC,QAAQC,IAAIvC,KAhOF,EAoOdpB,eAAiB,WACf,IACE,EAAKI,MAAMiM,WAAWM,SACtB,EAAKD,qBACL,MAAMtL,GACNsC,QAAQC,IAAIvC,KAzOF,EA6OdiK,gBAAkB,WAChB,EAAKjL,MAAMiM,WAAWO,UACtB,EAAKF,sBA/OO,EAkPdA,mBAAqB,WACnB,EAAKG,mBAnPO,EAsPdA,gBAtPc,sBAsPI,4BAAAC,EAAA,6DAChB,EAAKzL,SAAS,CACZ+J,SAAU,KAFI,SAKC,EAAKhL,MAAMiM,WAAWU,YAAYC,MALnC,OAKZC,EALY,OAMGA,EAAKC,iBAAiB3B,IAEvC,EAAKlK,SAAS,CACZ+J,SAAU6B,EAAKE,GAAGC,KAKtB,EAAKC,WAAWjB,MAAK,SAACkB,GACpB5J,QAAQC,IAAI,eAAe2J,GAC3B,EAAKjM,SAAS,CACZ2B,YAAauK,KAAKC,MAAMF,EAAQG,WAEjCC,OAAM,SAACC,GAERjK,QAAQC,IAAI,uBAAuBgK,MArBrB,2CAtPJ,EA+QdC,gBA/Qc,sBA+QI,sBAAAd,EAAA,+EACT,IAAIe,SAAQ,SAACC,EAASC,GACjBjC,OAAOC,KAAKG,OAAO8B,MAAMC,MAAMC,KAAK,CAACC,EAAG,wBAC9CC,SAAQ,SAACC,GACRA,EAAEJ,OAASI,EAAEJ,MAAM7K,QAAUiL,EAAEJ,MAAM,GAAGtM,GACzCmM,EAAQO,EAAEJ,MAAM,GAAGtM,IAEnBoM,EAAO,aAPG,2CA/QJ,EA4RdV,SA5Rc,sBA4RH,sBAAAP,EAAA,+EACF,IAAIe,SAAQ,SAACC,EAASC,GAE3B,EAAKH,kBAAkBxB,MAAK,SAACkC,GAC3B,EAAKjN,SAAS,CACZiN,OAAQA,IAGIxC,OAAOC,KAAKG,OAAO8B,MAAMC,MAAMjB,IAAI,CAC7CsB,OAAQA,EACRC,IAAK,UAGDnC,MAAK,SAACkB,GAEZ5J,QAAQC,IAAI,2BACZmK,EAAQR,MAEPI,OAAM,SAACC,GACRjK,QAAQC,IAAI,oCACZoK,EAAO,sBAGRL,OAAM,SAACC,GACRjK,QAAQC,IAAI,sCACZoK,EAAO,wBAzBF,2CA5RG,EA0TdjK,WAAa,SAACd,GACZ,IAAMwL,EAAW,kCACXC,EAAY,SAAWD,EAAW,OAEpCE,EAAaC,KAAKpB,KAAKqB,UAAU5L,IACjC6L,EACAJ,EACA,yCACAlB,KAAKqB,UAAU,CAAC,MAAS,iBACzBH,EAHAA,wEAOAC,EAVgB,0CAYN5C,OAAOC,KAAKG,OAAO4C,QAAQ,CACrC,KAAQ,yBACR,OAAU,OACV,OAAU,CAAC,WAAc,aACzB,QAAW,CACT,eAAgB,8BAAgCN,EAAW,KAE7D,KAAQK,IACJT,SAAQ,SAASW,GACvBrL,QAAQC,IAAI,2BAlVF,EA4VdC,WAAa,SAACZ,GACZ,IAAMwL,EAAW,kCACXC,EAAY,SAAWD,EAAW,OAEpCE,EAAaC,KAAKpB,KAAKqB,UAAU5L,IACjC6L,EACAJ,EACA,yCACAlB,KAAKqB,UAAU,CAAC,MAAS,iBACzBH,EAHAA,wEAOAC,EAVgB,0CAYN5C,OAAOC,KAAKG,OAAO4C,QAAQ,CACrC,KAAQ,0BAA4B,EAAK1O,MAAMkO,OAC/C,OAAU,MACV,OAAU,CAAC,WAAc,YAAa,IAAO,QAC7C,QAAW,CACT,eAAgB,8BAAgCE,EAAW,KAE7D,KAAQK,IACJT,SAAQ,SAASW,GACvBrL,QAAQC,IAAI,qBAjXd,EAAKvD,MAAQ,CACX+B,KAAM,GACNkK,WAAY,GACZjB,SAAU,GACVpI,YACA,GA2KAsL,OAAQ,GACRpI,kBAAmB,EACnBuE,gBAAiB,GAGnB,EAAKwB,WAAa,EAAKA,WAAWvL,KAAhB,gBAClB,EAAKV,eAAiB,EAAKA,eAAeU,KAApB,gBACtB,EAAK2K,gBAAkB,EAAKA,gBAAgB3K,KAArB,gBACvB,EAAKgM,mBAAqB,EAAKA,mBAAmBhM,KAAxB,gBAC1B,EAAKmL,iBAAmB,EAAKA,iBAAiBnL,KAAtB,gBACxB,EAAKmM,gBAAkB,EAAKA,gBAAgBnM,KAArB,gBACvB,EAAKkN,gBAAkB,EAAKA,gBAAgBlN,KAArB,gBACvB,EAAK2M,SAAW,EAAKA,SAAS3M,KAAd,gBAChB,EAAKoD,WAAa,EAAKA,WAAWpD,KAAhB,gBAClB,EAAK+C,kBAAoB,EAAKA,kBAAkB/C,KAAvB,gBACzB,EAAKkD,WAAa,EAAKA,WAAWlD,KAAhB,gBAClB,EAAKyF,uBAAyB,EAAKA,uBAAuBzF,KAA5B,gBAC9B,EAAKoK,qBAAuB,EAAKA,qBAAqBpK,KAA1B,gBApMhB,E,gEAwMZ,IAAIsO,EAASpH,SAASqH,cAAc,UACpCD,EAAOE,OAASpP,KAAK+L,iBACrBmD,EAAOG,IAAI,oCACXvH,SAAS6F,KAAK2B,YAAYJ,K,wCA2IV3L,GAChBvD,KAAKuB,SAAS,CACZ2B,YAAaK,M,6CAgCM1B,GACrB7B,KAAKuB,SAAS,CACZ6E,iBAAkBvE,M,2CAIDA,GACnB7B,KAAKuB,SAAS,CACZoJ,eAAgB9I,M,+BAMlB,IAAI0N,EAAS,GACTC,EAAS,GAkBb,MAhB2B,KAAxBxP,KAAKM,MAAMgL,eAA2CmE,IAAxBzP,KAAKM,MAAMgL,SAC1CiE,EAAS,kBAAC,EAAD,CAAOrP,eAAgBF,KAAKE,kBAErCqP,EAAS,kBAAC,EAAD,CACCrM,YAAalD,KAAKM,MAAM4C,YACxBS,kBAAmB3D,KAAK2D,kBACxBK,WAAYhE,KAAKgE,WACjBF,WAAY9D,KAAK8D,WACjBuC,uBAAwBrG,KAAKqG,uBAC7B2E,qBAAsBhL,KAAKgL,qBAC3B5E,iBAAkBpG,KAAKM,MAAM8F,iBAC7BuE,eAAgB3K,KAAKM,MAAMqK,iBAErC6E,EAAS,kBAAC,EAAD,CAAQlE,SAAUtL,KAAKM,MAAMgL,SAAUC,gBAAiBvL,KAAKuL,mBAIpE,yBAAKzL,UAAU,OACZ0P,EACAD,O,GA9ZOpP,IAAMC,WCRxBsP,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF9H,SAASC,eAAe,W","file":"static/js/main.ff030793.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  render() {\r\n      return (\r\n        <div className=\"Login\">\r\n            <div className=\"login-container\">\r\n                <div className=\"intro\">\r\n                    <h1>Welcome to Biriba Notes</h1>\r\n                    <p>\r\n                      Here you can keep notes on \r\n                      your favourite card game Biriba\r\n                      using your Google Drive Account\r\n                    </p>\r\n                </div>\r\n                <button\r\n                  onClick={this.props.signInFunction}\r\n                >\r\n                    Login with Google\r\n                </button>\r\n            </div>\r\n        </div>\r\n      );\r\n  }\r\n\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport './NewGame.css';\r\n\r\nimport {\r\n  withRouter,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass NewGame extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      numberOfPlayers: 0,\r\n      numberOfTeams: 0,\r\n      players: [],\r\n      teams: [],\r\n    };\r\n    this.onChangeNumberOfPlayers = this.onChangeNumberOfPlayers.bind(this);\r\n    this.submitNumberOfPlayers = this.submitNumberOfPlayers.bind(this);\r\n    this.onChangePlayerNames = this.onChangePlayerNames.bind(this);\r\n    this.submitNumberOfTeams = this.submitNumberOfTeams.bind(this);\r\n    this.onChangeNumberOfTeams = this.onChangeNumberOfTeams.bind(this);\r\n    this.getAvailablePlayers = this.getAvailablePlayers.bind(this);\r\n    this.addPlayerToTeam = this.addPlayerToTeam.bind(this);\r\n    this.removePlayerFromTeam = this.removePlayerFromTeam.bind(this);\r\n    this.createGameNote = this.createGameNote.bind(this);\r\n    this.getDateToString = this.getDateToString.bind(this);\r\n  }\r\n\r\n  onChangeNumberOfPlayers(e) {\r\n    this.setState({\r\n      numberOfPlayers: e.target.value,\r\n      players: []\r\n    });\r\n  }\r\n\r\n  submitNumberOfPlayers() {\r\n    if(this.state.numberOfPlayers > 1 && this.state.numberOfPlayers <= 20) {\r\n      let players = [];\r\n      for(let i = 0; i < this.state.numberOfPlayers; i++) {\r\n        players.push({\r\n          \"id\": i,\r\n          \"name\": \"\"\r\n        });\r\n      }\r\n      this.setState({\r\n        players: players\r\n      });\r\n    }\r\n  }\r\n\r\n  onChangePlayerNames(e) {\r\n    // given id of form : playerName_# where # is the index in json\r\n    let playerId = e.target.id.split(\"_\")[1]; \r\n    let playerName = e.target.value;\r\n    let newPlayers = this.state.players;\r\n    newPlayers[playerId][\"name\"] = playerName;\r\n    this.setState({\r\n      players: newPlayers\r\n    });\r\n  }\r\n\r\n  onChangeNumberOfTeams(e) {\r\n    this.setState({\r\n      teams: [],\r\n      numberOfTeams: e.target.value\r\n    });\r\n  }\r\n\r\n  submitNumberOfTeams() {\r\n    if(this.state.numberOfTeams >= 2 && this.state.numberOfTeams <= this.state.numberOfPlayers) {\r\n\r\n      let flag = false;\r\n      this.state.players.forEach((player, index) => {\r\n        if(player.name === \"\") {\r\n          flag = true;\r\n        }\r\n      });\r\n\r\n      if(!flag) {\r\n        let teams = [];\r\n        for(let i = 0; i < this.state.numberOfTeams; i++) {\r\n          teams.push({\r\n            \"id\": i,\r\n            \"members\": []\r\n          });\r\n          this.setState({\r\n            teams: teams\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getAvailablePlayers() {\r\n    if(this.state.players !== [] && this.state.teams !== [] && this.state.teams.members !== []) {\r\n      let availablePlayers = [];\r\n      this.state.players.forEach((player, pIndex) => {\r\n        let flag = true;\r\n        this.state.teams.forEach((team, tIndex) => {\r\n          team[\"members\"].forEach((member, mIndex) => {\r\n            if(Number(player[\"id\"]) === Number(member[\"id\"]) ) {\r\n              flag = false;\r\n            }\r\n          });\r\n        });\r\n        if(flag) {\r\n          availablePlayers.push(player);\r\n        }\r\n      });\r\n      return availablePlayers;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  addPlayerToTeam(e) {\r\n    // given id of form : availablePlayer_#1_#2 where #1 is the index of player id in json\r\n    // and #2 is the id of the team to be added if pressed\r\n    let args = e.target.id.split(\"_\");\r\n    let playerId = args[1]; \r\n    let teamId = args[2];\r\n\r\n    let newTeams = this.state.teams;\r\n    newTeams[teamId][\"members\"].push(\r\n      {\r\n        \"id\": playerId\r\n      }\r\n    );\r\n    this.setState({\r\n      teams: newTeams\r\n    });\r\n  }\r\n\r\n  removePlayerFromTeam(e) {\r\n    // given id of form : selectedPlayer_#1_#2 where #1 is the index of player id in json\r\n    // and #2 is the id of the team to be added if pressed\r\n    let args = e.target.id.split(\"_\");\r\n    let playerId = args[1];\r\n\r\n    let newTeams = [];\r\n    this.state.teams.forEach((team, tIndex) => {\r\n      let newTeamMembers = [];\r\n      team[\"members\"].forEach((member, mIndex) => {\r\n        if(Number(member[\"id\"]) !== Number(playerId)) {\r\n          newTeamMembers.push({\"id\": member[\"id\"]});\r\n        }\r\n      });\r\n      newTeams.push({\r\n        \"id\": team[\"id\"],\r\n        \"members\": newTeamMembers\r\n      })\r\n    });\r\n\r\n    this.setState({\r\n      teams: newTeams\r\n    });\r\n  }\r\n\r\n  createGameNote() {\r\n    if(this.props.biribaNotes.unfinishedGames) {\r\n      let roundsLength = 1;\r\n      if(this.props.biribaNotes.unfinishedGames.rounds) {\r\n        roundsLength = this.props.biribaNotes.unfinishedGames.rounds.length;\r\n      }\r\n      // file was found, must update it\r\n      // first update biribaNotes.txt with the new game and first round\r\n      let updatedBiribaNotes = this.props.biribaNotes;\r\n      let newRound = {\r\n        \"round\": roundsLength,\r\n        \"scores\": [],\r\n        \"cardDealer\": 0,\r\n        \"biribaDealer\": Number(this.state.players.length - 1),\r\n        \"trumpNumber\": 1,\r\n        \"trumpSymbol\": \"KA\"\r\n      };\r\n      this.state.teams.forEach((team, tIndex) => {\r\n        newRound.scores.push({\r\n          \"teamId\": team.id,\r\n          \"countCardsScore\": 0,\r\n          \"biribaScore\": 0,\r\n          \"penalties\": 0,\r\n          \"close\": false\r\n        });\r\n      });\r\n      let newUnfinishedGame = {\r\n        \"id\": updatedBiribaNotes.unfinishedGames.length + 1,\r\n        \"date\": this.getDateToString(),\r\n        \"teams\": this.state.teams,\r\n        \"players\": this.state.players,\r\n        \"rounds\": [newRound],\r\n        \"finished\": false\r\n      };\r\n      updatedBiribaNotes.unfinishedGames.push(newUnfinishedGame);\r\n      this.props.updateBiribaNotes(updatedBiribaNotes);\r\n      console.log(\"calling update existing file...\");\r\n      this.props.updateFile(updatedBiribaNotes);\r\n      \r\n    } else {\r\n      // file with this name was not found, must create new file\r\n      // first initialize biribaNotes.txt with the first game and first round\r\n      let newRound = {\r\n        \"round\": 1,\r\n        \"scores\": [],\r\n        \"cardDealer\": 0,\r\n        \"biribaDealer\": Number(this.state.players.length - 1),\r\n        \"trumpNumber\": 1,\r\n        \"trumpSymbol\": \"KA\"\r\n      };\r\n      this.state.teams.forEach((team, tIndex) => {\r\n        newRound.scores.push({\r\n          \"teamId\": team.id,\r\n          \"countCardsScore\": 0,\r\n          \"biribaScore\": 0,\r\n          \"penalties\": 0,\r\n          \"close\": false\r\n        });\r\n      });\r\n      let updatedBiribaNotes = this.props.biribaNotes;\r\n      updatedBiribaNotes = {\r\n        unfinishedGames: [\r\n          {\r\n            \"id\": 0,\r\n            \"date\": this.getDateToString(),\r\n            \"teams\": this.state.teams,\r\n            \"players\": this.state.players,\r\n            \"rounds\": [newRound],\r\n            \"finished\": false\r\n          },\r\n        ],\r\n        finishedGames: []\r\n      };\r\n      this.props.updateBiribaNotes(updatedBiribaNotes);\r\n      console.log(\"calling upload new file...\");\r\n      this.props.uploadFile(updatedBiribaNotes);\r\n    } \r\n    this.props.history.push(\"/biriba\");\r\n  }\r\n\r\n  getDateToString() {\r\n    let cal = new Date();\r\n    let year = cal.getFullYear();\r\n    let month = cal.getMonth() + 1;\r\n    month = (month < 10) ? \"0\" + month : month;\r\n    let day = cal.getDate();\r\n    day = (day < 10) ? \"0\" + day : day;\r\n    let hours = cal.getHours() + 1;\r\n    hours = (hours < 10) ? \"0\" + hours : hours;\r\n    let minutes = cal.getMinutes();\r\n    minutes = (minutes < 10) ? \"0\" + minutes : minutes;\r\n    return day+\"/\"+month+\"/\"+year+\"|\"+hours+\":\"+minutes;\r\n  }\r\n\r\n  render() {\r\n\r\n      let playersDiv = [];\r\n      if(this.state.players !== []) {\r\n        let flag = false;\r\n        this.state.players.forEach((item, index) => {\r\n          flag = true;\r\n          playersDiv.push(\r\n            <div className=\"player-section\" key={\"playersDiv\"+index}>\r\n              <p className=\"title\">Player: {index+1}</p>\r\n              <input \r\n                type=\"text\"\r\n                maxLength=\"20\"\r\n                id={\"playerName_\"+index}\r\n                value={this.state.players[index][\"name\"]}\r\n                onChange={this.onChangePlayerNames}\r\n                required={true}\r\n              />\r\n              <p>Name</p>\r\n            </div>\r\n          )\r\n        });\r\n        if(flag) {\r\n          playersDiv.unshift(<div className=\"line\" key=\"playersDiv_0000\"></div>);\r\n          playersDiv.push(\r\n                <div className=\"section\" key={\"playersDiv9999\"}>\r\n                  <input \r\n                    type=\"number\" \r\n                    placeholder=\"2\" \r\n                    maxLength=\"2\"\r\n                    minLength=\"1\"\r\n                    max={this.state.numberOfPlayers}\r\n                    min=\"2\"\r\n                    value={this.state.numberOfTeams}\r\n                    onChange={this.onChangeNumberOfTeams}\r\n                    required={true}\r\n                  />\r\n                  <p>Number of teams</p>\r\n                  <button\r\n                    type=\"submit\"\r\n                    style={{\"height\":\"40px\"}} \r\n                    className=\"submit-players-button\" \r\n                    onClick={this.submitNumberOfTeams} >\r\n                    Submit names and number of teams\r\n                  </button>\r\n              </div>\r\n          );\r\n        }\r\n      }\r\n      \r\n      let teamsDiv = [];\r\n      if(this.state.teams !== []) {\r\n        let flag = false;\r\n\r\n        this.state.teams.forEach((team, index) => {\r\n          flag = true;\r\n\r\n          let availablePlayers = this.getAvailablePlayers();\r\n          let availablePlayersDiv = [];\r\n          availablePlayers.forEach((availablePlayer, APIndex) => {\r\n            availablePlayersDiv.push(\r\n              <button\r\n                id={\"availablePlayer_\"+availablePlayer[\"id\"]+\"_\"+team[\"id\"]}\r\n                onClick={this.addPlayerToTeam}\r\n                key={\"availablePlayer_\"+APIndex}\r\n                className=\"tag\">\r\n                  {availablePlayer[\"name\"]}\r\n              </button>\r\n            );\r\n          });\r\n          if(availablePlayers === [] || availablePlayers === null || availablePlayers.length === 0) {\r\n            availablePlayersDiv = <p className=\"msg\">No available players left</p>;\r\n          }\r\n\r\n          let selectedPlayers = [];\r\n          team.members.forEach((member, mIndex) => {\r\n            selectedPlayers.push(\r\n              <button\r\n                id={\"selectedPlayer_\"+member[\"id\"]+\"_\"+team[\"id\"]}\r\n                onClick={this.removePlayerFromTeam}\r\n                key={\"selectedPlayer_\"+mIndex}\r\n                className=\"tag\">\r\n                  {this.state.players[member[\"id\"]][\"name\"]}\r\n              </button>\r\n            );\r\n          });\r\n          if(selectedPlayers.length === 0) {\r\n            selectedPlayers = <p className=\"msg\">No members yet</p>;\r\n          }\r\n\r\n          teamsDiv.push(\r\n            <div className=\"player-section\" key={\"teamsDiv\"+index}>\r\n              <p className=\"title\">Team: {index+1}</p>\r\n              <div className=\"add-players-div\">\r\n                <div className=\"player-tags\">\r\n                  <p>Selected players</p>\r\n                  {selectedPlayers}\r\n                </div>\r\n                <div className=\"player-tags\">\r\n                  <p>Available players</p>\r\n                  {availablePlayersDiv}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        });\r\n        if(flag) {\r\n          teamsDiv.unshift(<div className=\"line\" key=\"teamsDiv_0000\"></div>);\r\n          teamsDiv.push(\r\n            <div className=\"section\" key={\"teamsDiv9910\"}>\r\n              <button\r\n                type=\"submit\"\r\n                style={{\"height\":\"40px\", \"backgroundColor\":\"#1B9AAA\"}} \r\n                className=\"submit-players-button\" \r\n                onClick={this.createGameNote} >\r\n                Create game note\r\n              </button>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div className=\"NewGame\">\r\n          <div className=\"NewGame-container\">\r\n              <div className=\"header\">\r\n              <p>New Game</p>\r\n                <Link to=\"/biriba\" >\r\n                  <i className=\"fa fa-arrow-left\" />\r\n                </Link>\r\n              </div>\r\n              \r\n              <div className=\"line\"></div>\r\n\r\n              <div className=\"section\">\r\n                <input \r\n                  type=\"number\" \r\n                  placeholder=\"2\" \r\n                  maxLength=\"2\"\r\n                  minLength=\"1\"\r\n                  max=\"20\"\r\n                  min=\"2\"\r\n                  value={this.state.numberOfPlayers}\r\n                  onChange={this.onChangeNumberOfPlayers}\r\n                />\r\n                <p>Number of players</p>\r\n                <button\r\n                  type=\"submit\" \r\n                  className=\"submit-players-button\" \r\n                  onClick={this.submitNumberOfPlayers} >\r\n                  Submit number of players\r\n                </button>\r\n              </div>\r\n\r\n            {playersDiv}\r\n\r\n            {teamsDiv}\r\n\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(NewGame);","import React from 'react';\r\nimport './UnfinishedGames.css';\r\n\r\nimport {\r\n  withRouter,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass UnfinishedGames extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.enterUnfinishedGame = this.enterUnfinishedGame.bind(this);\r\n  }\r\n\r\n  enterUnfinishedGame(e) {\r\n    let unfinishedGameId = e.target.id.split(\"_\")[1]; // given button id format of name_#game-id\r\n    this.props.updateUnfinishedGameId(unfinishedGameId);\r\n    this.props.history.push(\"/biriba/unfinished-games/game\");\r\n  }\r\n\r\n  render() {\r\n\r\n    let unfinishedGamesDiv = [];\r\n\r\n    if(this.props.biribaNotes && this.props.biribaNotes.unfinishedGames) {\r\n      this.props.biribaNotes.unfinishedGames.forEach((unfinishedGame, uIndex) => {\r\n        if(!unfinishedGame.finished) {\r\n          // search all teams and gather the maximum score of all\r\n          let maxScore = -1;\r\n          unfinishedGame.teams.forEach((team, tIndex) => {\r\n            let teamsTotalScore = 0;\r\n            unfinishedGame.rounds.forEach((round, rIndex) => {\r\n              round.scores.forEach((score, sIndex) => {\r\n                if(Number(team.id) === Number(score.teamId)) {\r\n                  teamsTotalScore += Number(score.biribaScore) + Number(score.countCardsScore) - Number(score.penalties);\r\n                  if(score.close) {\r\n                    teamsTotalScore += 100;\r\n                  }\r\n                }\r\n              });\r\n            });\r\n            if(maxScore < teamsTotalScore) {\r\n              maxScore = teamsTotalScore;\r\n            }\r\n          });\r\n\r\n          unfinishedGamesDiv.push(\r\n            <div className=\"UnfinishedGame-part\" key={\"UnfinishedGame-part\"+uIndex}\r\n                id={\"unfinishedGame_\"+uIndex} onClick={this.enterUnfinishedGame}>\r\n              <p className=\"title\">Game:#{uIndex}</p>\r\n              <div className=\"inline\">\r\n                <i className=\"fa fa-calendar\" />\r\n                <p className=\"date\">{unfinishedGame.date}</p>\r\n              </div>\r\n              <p>Players: {unfinishedGame.players.length}</p>\r\n              <p>Max score: {maxScore}</p>\r\n              <p>Teams: {unfinishedGame.teams.length}</p>\r\n              <p>Current round: {unfinishedGame.rounds.length}</p>\r\n            </div>\r\n          ) \r\n        }\r\n      });\r\n    }\r\n\r\n    if(unfinishedGamesDiv.length === 0) {\r\n      unfinishedGamesDiv = <p>No unfinished games available</p>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"UnfinishedGames\">\r\n        <div className=\"UnfinishedGames-container\">\r\n          <div className=\"header\">\r\n            <p>Unfinished Games</p>\r\n            <Link to=\"/biriba\" >\r\n              <i className=\"fa fa-arrow-left\" />\r\n            </Link>\r\n          </div>\r\n          \r\n          <div className=\"line\"></div>\r\n\r\n          <div className=\"section\">\r\n            {unfinishedGamesDiv}\r\n          </div>\r\n        </div>;\r\n      </div>  \r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(UnfinishedGames);","import React from 'react';\r\nimport './UnfinishedGame.css';\r\n\r\nimport {\r\n  withRouter,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass UnfinishedGame extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      biribaNotes: this.props.biribaNotes,\r\n      gameFinished: false\r\n    };\r\n    this.toggleList = this.toggleList.bind(this);\r\n    this.onScoreChange = this.onScoreChange.bind(this);\r\n    this.updateBiribaNotes = this.updateBiribaNotes.bind(this);\r\n    this.resetBiribaNotes = this.resetBiribaNotes.bind(this);\r\n    this.onRoundInfoChange = this.onRoundInfoChange.bind(this);\r\n    this.newRound = this.newRound.bind(this);\r\n    this.hasGameFinished = this.hasGameFinished.bind(this);\r\n    this.moveGameToFinished = this.moveGameToFinished.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.hasGameFinished();\r\n  }\r\n\r\n  toggleList(e) {\r\n    let button = document.getElementById(e.target.id);\r\n    let activateClass = e.target.id.split(\"_\")[0];\r\n    button.nextElementSibling.classList.toggle(activateClass);\r\n  }\r\n\r\n  onScoreChange(e) {\r\n    // given id of button with name \"scoreType_#round_#teamId\"\r\n    let args = e.target.id.split(\"_\");\r\n    let scoreType = args[0];\r\n    let roundOfScore = args[1];\r\n    let teamId = args[2];\r\n\r\n    let biribaNotes = this.state.biribaNotes;\r\n    biribaNotes.unfinishedGames[this.props.unfinishedGameId].rounds.forEach((round, rIndex)=> {\r\n      if(Number(round.round) === Number(roundOfScore)) {\r\n        round.scores.forEach((score, sIndex)=> {\r\n          if(Number(score.teamId) === Number(teamId)) {\r\n            if(scoreType === \"biribaScore\") {\r\n              score.biribaScore = e.target.value;\r\n            } else if (scoreType === \"countCardsScore\") {\r\n              score.countCardsScore = e.target.value;\r\n            } else if (scoreType === \"penalties\") {\r\n              score.penalties = e.target.value;\r\n            } else if (scoreType === \"close\") {\r\n              score.close = !score.close;\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      biribaNotes: biribaNotes\r\n    });\r\n  }\r\n\r\n  onRoundInfoChange(e) {\r\n    // given id format of \"nameOfField_#idOfRound\"\r\n    let args = e.target.id.split(\"_\");\r\n    let field = args[0];\r\n    let roundOfInfo = args[1];\r\n    let biribaNotes = this.state.biribaNotes;\r\n    biribaNotes.unfinishedGames[this.props.unfinishedGameId].rounds.forEach((round, rIndex) => {\r\n      if(Number(round.round) === Number(roundOfInfo)) {\r\n        round[field] = e.target.value\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      biribaNotes: biribaNotes\r\n    });\r\n  }\r\n\r\n  hasGameFinished() {\r\n    let ended = false;\r\n    let biribaNotes = this.state.biribaNotes;\r\n    biribaNotes.unfinishedGames[this.props.unfinishedGameId].teams.forEach((team, tIndex) => {\r\n      let teamScore = 0;\r\n      biribaNotes.unfinishedGames[this.props.unfinishedGameId].rounds.forEach((round, rIndex) => {\r\n        round.scores.forEach((score, sIndex) => {\r\n          if(Number(score.teamId) === Number(team.id)) {\r\n            teamScore += Number(score.biribaScore) + Number(score.countCardsScore)\r\n              - Number(score.penalties);\r\n            if(score.close) {\r\n              teamScore += 100;\r\n            }\r\n          }\r\n        });\r\n      });\r\n      if(teamScore >= 3010) {\r\n        ended = true;\r\n      }\r\n    });\r\n    this.setState({\r\n      gameFinished: ended\r\n    });\r\n  }\r\n\r\n  moveGameToFinished() {\r\n    let biribaNotes = this.state.biribaNotes;\r\n    biribaNotes.unfinishedGames[this.props.unfinishedGameId].finished = true;\r\n    biribaNotes.finishedGames.push(\r\n      biribaNotes.unfinishedGames[this.props.unfinishedGameId]\r\n    );\r\n\r\n    this.setState({\r\n      biribaNotes: biribaNotes\r\n    });\r\n    this.updateBiribaNotes(biribaNotes);\r\n    this.props.history.push(\"/biriba\");\r\n  }\r\n\r\n  updateBiribaNotes() {\r\n    this.props.updateBiribaNotes(this.state.biribaNotes);\r\n    this.hasGameFinished();\r\n    console.log(\"File updating...\");\r\n    this.props.updateFile(this.state.biribaNotes);\r\n  }\r\n\r\n  resetBiribaNotes() {\r\n    this.setState({\r\n      biribaNotes: this.props.biribaNotes\r\n    });\r\n  }\r\n\r\n  newRound() {\r\n    let biribaNotes = this.state.biribaNotes;\r\n    \r\n    let numberOfPlayers = biribaNotes.unfinishedGames[this.props.unfinishedGameId].players.length;\r\n\r\n    // id of last rounds card dealer\r\n    let roundsLength = biribaNotes.unfinishedGames[this.props.unfinishedGameId].rounds.length;\r\n    let cardDealerId = biribaNotes.unfinishedGames[this.props.unfinishedGameId].rounds[roundsLength-1]\r\n      .cardDealer;\r\n\r\n    let newRoundsCardDealerId = cardDealerId + 1;\r\n    if(newRoundsCardDealerId >= numberOfPlayers) {\r\n      newRoundsCardDealerId = 0;\r\n    }\r\n\r\n    let newRoundsBiribaDealerId = newRoundsCardDealerId - 1;\r\n    if(newRoundsBiribaDealerId < 0) {\r\n      newRoundsBiribaDealerId = numberOfPlayers - 1;\r\n    }\r\n\r\n    let newRound = {\r\n      \"round\": roundsLength+1,\r\n      \"scores\": [],\r\n      \"cardDealer\": Number(newRoundsCardDealerId),\r\n      \"biribaDealer\": Number(newRoundsBiribaDealerId),\r\n      \"trumpNumber\": 1,\r\n      \"trumpSymbol\": \"KA\"\r\n    };\r\n    biribaNotes.unfinishedGames[this.props.unfinishedGameId].teams.forEach((team, tIndex) => {\r\n      newRound.scores.push({\r\n        \"teamId\": team.id,\r\n        \"countCardsScore\": 0,\r\n        \"biribaScore\": 0,\r\n        \"penalties\": 0,\r\n        \"close\": false\r\n      });\r\n    });\r\n    \r\n    biribaNotes.unfinishedGames[this.props.unfinishedGameId].rounds.push(newRound);\r\n    \r\n    this.setState({\r\n      biribaNotes: biribaNotes\r\n    });\r\n    this.updateBiribaNotes(biribaNotes);\r\n  }\r\n\r\n  render() {\r\n\r\n    // collect all data for the specified game id\r\n    let gameDiv = [];\r\n    let unfinishedGame = this.state.biribaNotes.unfinishedGames[this.props.unfinishedGameId];\r\n    let roundLength = unfinishedGame.rounds.length;\r\n\r\n    // gather data for each round\r\n    let roundDiv = [];\r\n    unfinishedGame.rounds.forEach((round, rIndex) => {\r\n\r\n      // data for each team of the specific round\r\n\r\n      let maxTotalScore = -1;\r\n      \r\n      let teamRoundDiv = [];\r\n      let totalRoundScore = 0;\r\n      unfinishedGame.teams.forEach((team, tIndex) => {\r\n        \r\n        // gather round score data for each team\r\n        let roundScoreDiv = [];\r\n        round.scores.forEach((score, sIndex) => {\r\n          if(Number(score.teamId) === Number(team.id)) {\r\n            totalRoundScore = Number(score.biribaScore) + Number(score.countCardsScore) - Number(score.penalties);\r\n            roundScoreDiv.push(\r\n              <div className=\"round-score-div\" key={\"roundScoreDiv\"+tIndex+sIndex}>\r\n                <p>Round scores</p>\r\n                <div>\r\n                  <p>Biriba score</p>\r\n                  <input\r\n                    id={\"biribaScore_\"+round.round+\"_\"+score.teamId} \r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    defaultValue={score.biribaScore} \r\n                    onChange={this.onScoreChange}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <p>Count cards score</p>\r\n                  <input\r\n                    id={\"countCardsScore_\"+round.round+\"_\"+score.teamId} \r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    max=\"2000\"\r\n                    defaultValue={score.countCardsScore}\r\n                    onChange={this.onScoreChange}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <p>Penalties</p>\r\n                  <input\r\n                    id={\"penalties_\"+round.round+\"_\"+score.teamId} \r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    defaultValue={score.countCardsScore} \r\n                    onChange={this.onScoreChange}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <p>Close</p>\r\n                  <input\r\n                    id={\"close_\"+round.round+\"_\"+score.teamId} \r\n                    type=\"checkbox\"\r\n                    checked={score.close}\r\n                    onChange={this.onScoreChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        });\r\n\r\n        let totalScore = 0;\r\n        //get total score for one team from all rounds\r\n        unfinishedGame.rounds.forEach((round2, rIndex2) => {\r\n          round2.scores.forEach((score2, sIndex2) => {\r\n            if(Number(team.id) === Number(score2.teamId)) {\r\n              totalScore += Number(score2.biribaScore) + Number(score2.countCardsScore) - Number(score2.penalties);\r\n              if(score2.close) {\r\n                totalScore += 100;\r\n              }\r\n            }\r\n          });\r\n        });\r\n\r\n        if(maxTotalScore < totalScore) {\r\n          maxTotalScore = totalScore;\r\n        }\r\n\r\n        roundScoreDiv.push(\r\n          <div className=\"round-score-div\" key={\"totalScores\"+tIndex+rIndex} >\r\n            <p>Total scores</p>\r\n              <div>\r\n                <p>Total round score</p>\r\n                <input \r\n                  key={totalRoundScore}\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  readOnly={true}\r\n                  defaultValue={totalRoundScore} \r\n                />\r\n              </div>\r\n              <div>\r\n                <p>Total score</p>\r\n                <input\r\n                  key={totalScore}\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  readOnly={true}\r\n                  defaultValue={totalScore} \r\n                />\r\n              </div>\r\n          </div>\r\n        );\r\n\r\n        // gather members of team\r\n        let teamDiv = [];\r\n        let members = [];\r\n        team.members.forEach((member, mIndex) => {\r\n          members.push(\r\n            <div key={\"member\"+mIndex+tIndex}>\r\n              {unfinishedGame.players[member.id].name}\r\n            </div>\r\n          );\r\n        });\r\n        teamDiv.push(\r\n          <div className=\"team-div\" key={\"teamDiv\"+rIndex+tIndex}>\r\n            <button\r\n              id={\"team-info-div-active_\"+rIndex+\"_\"+tIndex}\r\n              onClick={this.toggleList}\r\n            >\r\n              Team {team.id} ({totalScore})\r\n            </button>\r\n            <div className=\"team-info-div\">\r\n              <div className=\"team-members-div\">\r\n                <p>Members</p>\r\n                <div className=\"members\">\r\n                  {members}\r\n                </div>\r\n              </div>\r\n              {roundScoreDiv}\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n        teamRoundDiv.push(\r\n          <div className=\"team-round-div\" key={\"teamRoundDiv\"+rIndex+tIndex}>\r\n            {teamDiv}\r\n          </div>\r\n        );\r\n      });\r\n\r\n      // find biriba & card dealer candidates \r\n      let candidates = [];\r\n      let biribaDealerId = \"\";\r\n      let cardDealerId = \"\";\r\n      unfinishedGame.players.forEach((player, pIndex) => {\r\n        if(player.id === round.biribaDealer) {\r\n          biribaDealerId = player.id;\r\n        }\r\n        if(player.id === round.cardDealer) {\r\n          cardDealerId = player.id;\r\n        }\r\n        candidates.push(\r\n          <option key={\"candidates_\"+pIndex+rIndex} value={player.id}>{player.name}</option>\r\n        );\r\n      });\r\n\r\n      // find trump card\r\n      let cardNumbers = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\", \"-\"];\r\n      let cardSymbols = [\"KA\", \"TR\", \"SP\", \"KO\", \"JO\"];\r\n      let candidateCardNumbers = [];\r\n      let candidateCardSymbols = [];\r\n      \r\n      cardNumbers.forEach((cardNumber, cIndex) => {\r\n        candidateCardNumbers.push(\r\n          <option key={\"candidateCardNumbers_\"+rIndex+cIndex} value={cardNumber}>{cardNumber}</option>\r\n        );\r\n      });\r\n\r\n      cardSymbols.forEach((cardSymbol, cIndex) => {\r\n        candidateCardSymbols.push(\r\n          <option key={\"candidateCardSymbols_\"+cIndex+rIndex} value={cardSymbol}>{cardSymbol}</option>\r\n        );\r\n      });\r\n\r\n      roundDiv.push(\r\n        <div className=\"round-div\" key={\"roundDiv\"+rIndex}>\r\n          <button\r\n            id={\"teams-round-div-active_\"+rIndex}\r\n            onClick={this.toggleList} \r\n          >\r\n            Round {round.round}\r\n          </button>\r\n          <div className=\"teams-round-div\">\r\n            {teamRoundDiv}\r\n            <div className=\"round-info\">\r\n              <div className=\"info\">\r\n                <p>Biriba dealer</p>\r\n                <select\r\n                  id={\"biribaDealer_\"+round.round}\r\n                  onChange={this.onRoundInfoChange}\r\n                  defaultValue={biribaDealerId}\r\n                >\r\n                  {candidates}\r\n                </select>\r\n              </div>\r\n              <div className=\"info\">\r\n                <p>Card dealer</p>\r\n                <select\r\n                  id={\"cardDealer_\"+round.round}\r\n                  onChange={this.onRoundInfoChange}\r\n                  defaultValue={cardDealerId}\r\n                >\r\n                  {candidates}\r\n                </select>\r\n              </div>\r\n              <div className=\"info\">\r\n                <p>Trump</p>\r\n                <select\r\n                  defaultValue={round.trumpNumber}\r\n                  id={\"trumpNumber_\"+round.round} \r\n                  style={{gridColumn:\"1/2\", gridRow:\"2/3\"}}\r\n                  onChange={this.onRoundInfoChange}\r\n                >\r\n                  {candidateCardNumbers}\r\n                </select>\r\n                <select\r\n                  defaultValue={round.trumpSymbol}\r\n                  id={\"trumpSymbol_\"+round.round} \r\n                  style={{gridColumn:\"2/3\", gridRow:\"2/3\"}}\r\n                  onChange={this.onRoundInfoChange}\r\n                >\r\n                  {candidateCardSymbols}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"save-options\" key={\"saveOption\"}>\r\n            <button\r\n              onClick={this.updateBiribaNotes}\r\n            >\r\n              Save changes\r\n            </button>\r\n            <button\r\n              onClick={this.resetBiribaNotes}\r\n            >\r\n              Reset data\r\n            </button>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    let button = <button\r\n                    key={\"gameFinishedButton\"+this.state.gameFinished}\r\n                    onClick={this.newRound}\r\n                  >\r\n                    <i className=\"fa fa-plus\" />\r\n                  </button>;\r\n    if(this.state.gameFinished) {\r\n        button = <button\r\n                    key={\"gameFinishedButton\"+this.state.gameFinished}\r\n                    onClick={this.moveGameToFinished}\r\n                    className=\"new-game-div-button-ended\"\r\n                  >\r\n                    Game ended (move to finished)\r\n                  </button>;\r\n    }\r\n\r\n    gameDiv.push(\r\n      <div className=\"game-div\" key={\"gameDiv\"}>\r\n        {roundDiv}\r\n        <div className=\"new-game-div\">\r\n          {button}\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className=\"UnfinishedGame\">\r\n        <div className=\"UnfinishedGame-container\">\r\n          <div className=\"header\">\r\n            <p>Unfinished Game {this.props.unfinishedGameId}</p>\r\n            <Link to=\"/biriba/unfinished-games\" >\r\n              <i className=\"fa fa-arrow-left\" />\r\n            </Link>\r\n          </div>\r\n          \r\n          <div className=\"line\"></div>\r\n\r\n          <div className=\"section\">\r\n            {gameDiv}\r\n          </div>\r\n        </div>;\r\n      </div>  \r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(UnfinishedGame);","import React from 'react';\r\nimport './FinishedGame.css';\r\n\r\nimport {\r\n  withRouter,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass FinishedGame extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      biribaNotes: this.props.biribaNotes,\r\n    };\r\n    this.toggleList = this.toggleList.bind(this);\r\n  }\r\n\r\n  toggleList(e) {\r\n    let button = document.getElementById(e.target.id);\r\n    let activateClass = e.target.id.split(\"_\")[0];\r\n    button.nextElementSibling.classList.toggle(activateClass);\r\n  }\r\n\r\n  render() {\r\n\r\n    // collect all data for the specified game id\r\n    let gameDiv = [];\r\n    let finishedGame = this.state.biribaNotes.finishedGames[this.props.finishedGameId];\r\n\r\n    // gather data for each round\r\n    let roundDiv = [];\r\n    finishedGame.rounds.forEach((round, rIndex) => {\r\n\r\n      // data for each team of the specific round\r\n\r\n      let maxTotalScore = -1;\r\n      \r\n      let teamRoundDiv = [];\r\n      let totalRoundScore = 0;\r\n      finishedGame.teams.forEach((team, tIndex) => {\r\n        \r\n        // gather round score data for each team\r\n        let roundScoreDiv = [];\r\n        round.scores.forEach((score, sIndex) => {\r\n          if(Number(score.teamId) === Number(team.id)) {\r\n            totalRoundScore = Number(score.biribaScore) + Number(score.countCardsScore) - Number(score.penalties);\r\n            roundScoreDiv.push(\r\n              <div className=\"round-score-div\" key={\"roundScoreDiv\"+tIndex+sIndex}>\r\n                <p>Round scores</p>\r\n                <div>\r\n                  <p>Biriba score</p>\r\n                  <input\r\n                    id={\"biribaScore_\"+round.round+\"_\"+score.teamId} \r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    defaultValue={score.biribaScore} \r\n                    readOnly={true}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <p>Count cards score</p>\r\n                  <input\r\n                    id={\"countCardsScore_\"+round.round+\"_\"+score.teamId} \r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    max=\"2000\"\r\n                    defaultValue={score.countCardsScore}\r\n                    readOnly={true}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <p>Penalties</p>\r\n                  <input\r\n                    id={\"penalties_\"+round.round+\"_\"+score.teamId} \r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    defaultValue={score.countCardsScore} \r\n                    readOnly={true}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <p>Close</p>\r\n                  <input\r\n                    id={\"close_\"+round.round+\"_\"+score.teamId} \r\n                    type=\"checkbox\"\r\n                    checked={score.close}\r\n                    unselectable={\"true\"}\r\n                    readOnly={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        });\r\n\r\n        let totalScore = 0;\r\n        //get total score for one team from all rounds\r\n        finishedGame.rounds.forEach((round2, rIndex2) => {\r\n          round2.scores.forEach((score2, sIndex2) => {\r\n            if(Number(team.id) === Number(score2.teamId)) {\r\n              totalScore += Number(score2.biribaScore) + Number(score2.countCardsScore) - Number(score2.penalties);\r\n              if(score2.close) {\r\n                totalScore += 100;\r\n              }\r\n            }\r\n          });\r\n        });\r\n\r\n        if(maxTotalScore < totalScore) {\r\n          maxTotalScore = totalScore;\r\n        }\r\n\r\n        roundScoreDiv.push(\r\n          <div className=\"round-score-div\" key={\"totalScores\"+tIndex+rIndex} >\r\n            <p>Total scores</p>\r\n              <div>\r\n                <p>Total round score</p>\r\n                <input \r\n                  key={totalRoundScore}\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  readOnly={true}\r\n                  defaultValue={totalRoundScore} \r\n                />\r\n              </div>\r\n              <div>\r\n                <p>Total score</p>\r\n                <input\r\n                  key={totalScore}\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  readOnly={true}\r\n                  defaultValue={totalScore} \r\n                />\r\n              </div>\r\n          </div>\r\n        );\r\n\r\n        // gather members of team\r\n        let teamDiv = [];\r\n        let members = [];\r\n        team.members.forEach((member, mIndex) => {\r\n          members.push(\r\n            <div key={\"member\"+mIndex+tIndex}>\r\n              {finishedGame.players[member.id].name}\r\n            </div>\r\n          );\r\n        });\r\n        teamDiv.push(\r\n          <div className=\"team-div\" key={\"teamDiv\"+rIndex+tIndex}>\r\n            <button\r\n              id={\"team-info-div-active_\"+rIndex+\"_\"+tIndex}\r\n              onClick={this.toggleList}\r\n            >\r\n              Team {team.id} ({totalScore})\r\n            </button>\r\n            <div className=\"team-info-div\">\r\n              <div className=\"team-members-div\">\r\n                <p>Members</p>\r\n                <div className=\"members\">\r\n                  {members}\r\n                </div>\r\n              </div>\r\n              {roundScoreDiv}\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n        teamRoundDiv.push(\r\n          <div className=\"team-round-div\" key={\"teamRoundDiv\"+rIndex+tIndex}>\r\n            {teamDiv}\r\n          </div>\r\n        );\r\n      });\r\n\r\n      // find biriba & card dealer candidates \r\n      let candidates = [];\r\n      let biribaDealerId = \"\";\r\n      let cardDealerId = \"\";\r\n      finishedGame.players.forEach((player, pIndex) => {\r\n        if(player.id === round.biribaDealer) {\r\n          biribaDealerId = player.id;\r\n        }\r\n        if(player.id === round.cardDealer) {\r\n          cardDealerId = player.id;\r\n        }\r\n        candidates.push(\r\n          <option key={\"candidates_\"+pIndex+rIndex} value={player.id}>{player.name}</option>\r\n        );\r\n      });\r\n\r\n      // find trump card\r\n      let cardNumbers = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\", \"-\"];\r\n      let cardSymbols = [\"KA\", \"TR\", \"SP\", \"KO\", \"JO\"];\r\n      let candidateCardNumbers = [];\r\n      let candidateCardSymbols = [];\r\n      \r\n      cardNumbers.forEach((cardNumber, cIndex) => {\r\n        candidateCardNumbers.push(\r\n          <option key={\"candidateCardNumbers_\"+rIndex+cIndex} value={cardNumber}>{cardNumber}</option>\r\n        );\r\n      });\r\n\r\n      cardSymbols.forEach((cardSymbol, cIndex) => {\r\n        candidateCardSymbols.push(\r\n          <option key={\"candidateCardSymbols_\"+cIndex+rIndex} value={cardSymbol}>{cardSymbol}</option>\r\n        );\r\n      });\r\n\r\n      roundDiv.push(\r\n        <div className=\"round-div\" key={\"roundDiv\"+rIndex}>\r\n          <button\r\n            id={\"teams-round-div-active_\"+rIndex}\r\n            onClick={this.toggleList} \r\n          >\r\n            Round {round.round}\r\n          </button>\r\n          <div className=\"teams-round-div\">\r\n            {teamRoundDiv}\r\n            <div className=\"round-info\">\r\n              <div className=\"info\">\r\n                <p>Biriba dealer</p>\r\n                <select\r\n                  id={\"biribaDealer_\"+round.round}\r\n                  defaultValue={biribaDealerId}\r\n                  disabled={true}\r\n                >\r\n                  {candidates}\r\n                </select>\r\n              </div>\r\n              <div className=\"info\">\r\n                <p>Card dealer</p>\r\n                <select\r\n                  id={\"cardDealer_\"+round.round}\r\n                  defaultValue={cardDealerId}\r\n                  disabled={true}\r\n                >\r\n                  {candidates}\r\n                </select>\r\n              </div>\r\n              <div className=\"info\">\r\n                <p>Trump</p>\r\n                <select\r\n                  defaultValue={round.trumpNumber}\r\n                  id={\"trumpNumber_\"+round.round} \r\n                  style={{gridColumn:\"1/2\", gridRow:\"2/3\"}}\r\n                  disabled={true}\r\n                >\r\n                  {candidateCardNumbers}\r\n                </select>\r\n                <select\r\n                  defaultValue={round.trumpSymbol}\r\n                  id={\"trumpSymbol_\"+round.round} \r\n                  style={{gridColumn:\"2/3\", gridRow:\"2/3\"}}\r\n                  disabled={true}\r\n                >\r\n                  {candidateCardSymbols}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    gameDiv.push(\r\n      <div className=\"game-div\" key={\"gameDiv\"}>\r\n        {roundDiv}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className=\"FinishedGame\">\r\n        <div className=\"FinishedGame-container\">\r\n          <div className=\"header\">\r\n            <p>Unfinished Game {this.props.finishedGameId}</p>\r\n            <Link to=\"/biriba/history\" >\r\n              <i className=\"fa fa-arrow-left\" />\r\n            </Link>\r\n          </div>\r\n          \r\n          <div className=\"line\"></div>\r\n\r\n          <div className=\"section\">\r\n            {gameDiv}\r\n          </div>\r\n        </div>;\r\n      </div>  \r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(FinishedGame);","import React from 'react';\r\nimport './History.css';\r\n\r\nimport {\r\n  withRouter,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass History extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.enterFinishedGame = this.enterFinishedGame.bind(this);\r\n  }\r\n\r\n  enterFinishedGame(e) {\r\n    let finishedGameId = e.target.id.split(\"_\")[1]; // given button id format of name_#game-id\r\n    this.props.updateFinishedGameId(finishedGameId);\r\n    this.props.history.push(\"/biriba/history/game\");\r\n  }\r\n\r\n  render() {\r\n\r\n    let HistoryDiv = [];\r\n\r\n    if(this.props.biribaNotes && this.props.biribaNotes.finishedGames) {\r\n      this.props.biribaNotes.finishedGames.forEach((finishedGame, uIndex) => {\r\n        if(finishedGame.finished) {\r\n          // search all teams and gather the maximum score of all\r\n          let maxScore = -1;\r\n          finishedGame.teams.forEach((team, tIndex) => {\r\n            let teamsTotalScore = 0;\r\n            finishedGame.rounds.forEach((round, rIndex) => {\r\n              round.scores.forEach((score, sIndex) => {\r\n                if(Number(team.id) === Number(score.teamId)) {\r\n                  teamsTotalScore += Number(score.biribaScore) + Number(score.countCardsScore);\r\n                }\r\n              });\r\n            });\r\n            if(maxScore < teamsTotalScore) {\r\n              maxScore = teamsTotalScore;\r\n            }\r\n          });\r\n\r\n          HistoryDiv.push(\r\n            <div className=\"FinishedGame-part\" key={\"FinishedGame-part\"+uIndex}\r\n                id={\"FinishedGame_\"+uIndex} onClick={this.enterFinishedGame}>\r\n              <p className=\"title\">Game:#{uIndex}</p>\r\n              <div className=\"inline\">\r\n                <i className=\"fa fa-calendar\" />\r\n                <p className=\"date\">{finishedGame.date}</p>\r\n              </div>\r\n              <p>Players: {finishedGame.players.length}</p>\r\n              <p>Max score: {maxScore}</p>\r\n              <p>Teams: {finishedGame.teams.length}</p>\r\n              <p>Current round: {finishedGame.rounds.length}</p>\r\n            </div>\r\n          ) \r\n        }\r\n      });\r\n    }\r\n\r\n    if(HistoryDiv.length === 0) {\r\n      HistoryDiv = <p>No finished games available</p>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"History\">\r\n        <div className=\"History-container\">\r\n          <div className=\"header\">\r\n            <p>History</p>\r\n            <Link to=\"/biriba\" >\r\n              <i className=\"fa fa-arrow-left\" />\r\n            </Link>\r\n          </div>\r\n          \r\n          <div className=\"line\"></div>\r\n\r\n          <div className=\"section\">\r\n            {HistoryDiv}\r\n          </div>\r\n        </div>;\r\n      </div>  \r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(History);","import React from 'react';\r\nimport './Menu.css';\r\nimport NewGame from './NewGame';\r\nimport UnfinishedGames from './UnfinishedGames';\r\nimport UnfinishedGame from './UnfinishedGame';\r\nimport FinishedGame from './FinishedGame';\r\nimport History from './History';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass Menu extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <Router>\r\n          <div className=\"Menu\">\r\n\r\n            <Switch>\r\n              <Route exact path=\"/biriba\">\r\n                <div className=\"menu-container\">\r\n                    <div className=\"intro\">\r\n                        <h1>Menu</h1>\r\n                    </div>\r\n                    <Link to=\"/biriba/new-game\">\r\n                        <i className=\"fa fa-plus\" />\r\n                        <p>New Game Notes</p>\r\n                    </Link>\r\n                    <Link to=\"/biriba/unfinished-games\">\r\n                        <i className=\"fa fa-edit\" />\r\n                        <p>Unfinished Game Notes</p>\r\n                    </Link>\r\n                    <Link to=\"/biriba/history\">\r\n                        <i className=\"fa fa-clipboard\" />\r\n                        <p>History</p>\r\n                    </Link>\r\n                </div>\r\n              </Route>\r\n\r\n              <Route exact path=\"/biriba/new-game\">\r\n                <NewGame\r\n                  biribaNotes={this.props.biribaNotes}\r\n                  updateBiribaNotes={this.props.updateBiribaNotes}\r\n                  uploadFile={this.props.uploadFile}   \r\n                  updateFile={this.props.updateFile}\r\n                />\r\n              </Route>\r\n\r\n              <Route exact path=\"/biriba/unfinished-games\">\r\n                <UnfinishedGames\r\n                  biribaNotes={this.props.biribaNotes}\r\n                  updateBiribaNotes={this.props.updateBiribaNotes}\r\n                  uploadFile={this.props.uploadFile}   \r\n                  updateFile={this.props.updateFile}\r\n                  updateUnfinishedGameId={this.props.updateUnfinishedGameId}\r\n                  unfinishedGameId={this.props.unfinishedGameId}\r\n                />\r\n              </Route>\r\n\r\n              <Route exact path=\"/biriba/history\">\r\n                <History\r\n                  biribaNotes={this.props.biribaNotes}\r\n                  finishedGameId={this.props.finishedGameId}\r\n                  updateFinishedGameId={this.props.updateFinishedGameId}\r\n                />\r\n              </Route>\r\n\r\n              <Route exact path=\"/biriba/unfinished-games/game\">\r\n                <UnfinishedGame\r\n                  unfinishedGameId={this.props.unfinishedGameId}\r\n                  biribaNotes={this.props.biribaNotes}\r\n                  updateBiribaNotes={this.props.updateBiribaNotes}\r\n                  uploadFile={this.props.uploadFile}   \r\n                  updateFile={this.props.updateFile}\r\n                />\r\n              </Route>\r\n\r\n              <Route exact path=\"/biriba/history/game\">\r\n                <FinishedGame\r\n                  updateFinishedGameId={this.props.updateFinishedGameId}\r\n                  finishedGameId={this.props.finishedGameId}\r\n                  biribaNotes={this.props.biribaNotes}\r\n                />\r\n              </Route>\r\n\r\n            </Switch>\r\n\r\n          </div>\r\n      </Router>  \r\n      );\r\n  }\r\n\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport './Logout.css';\r\n\r\nclass Logout extends React.Component {\r\n\r\n  render() {\r\n      return (\r\n        <div className=\"Logout\">\r\n            <div className=\"logout-container\">\r\n                <div className=\"user\">\r\n                  <i className=\"fa fa-user\" /><p>{this.props.userMail}</p>\r\n                </div>\r\n                <button\r\n                  onClick={this.props.signOutFunction}\r\n                >\r\n                    <i className=\"fa fa-sign-out\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n      );\r\n  }\r\n\r\n}\r\n\r\nexport default Logout;","class Keys {\r\n    static getAPIKey() {\r\n        return \"AIzaSyDx-UwZd7JuuZZEKaA5OeCXpiWr4PGul9I\";\r\n    }\r\n\r\n    static getClientID() {\r\n        return \"286520596166-kcoq2cmrbd0cejleemk2viuq6rguivhj.apps.googleusercontent.com\";\r\n    }\r\n} export default Keys;","import React from 'react';\r\nimport './App.css';\r\nimport Login from './Login';\r\nimport Menu from './Menu';\r\nimport Logout from './Logout';\r\n\r\nimport Keys from './Keys.js';\r\n\r\nvar SCOPE = \"https://www.googleapis.com/auth/drive\";\r\nvar DISCOVERY_URL = \"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\";\r\nvar API_KEY = Keys.getAPIKey();\r\nvar CLIENT_ID = Keys.getClientID();\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      googleAuth: \"\",\r\n      userMail: \"\",\r\n      biribaNotes: \r\n      {\r\n      //biribaNotes.json FILE FORM\r\n\r\n        //   unfinishedGames: [\r\n        //     {\r\n        //          \"id\": 0,\r\n        //          \"date\": \"01/01/2013|12:12\",\r\n        //          \"teams\": [\r\n        //            {\r\n        //              \"id\": 0,\r\n        //              \"members\": [\r\n        //                {\r\n        //                  \"id\": 0\r\n        //                }\r\n        //              ]\r\n        //            },\r\n        //            {\r\n        //             \"id\": 1,\r\n        //             \"members\": [\r\n        //               {\r\n        //                 \"id\": 1\r\n        //               }\r\n        //             ]\r\n        //           }\r\n        //          ],\r\n        //          \"players\": [\r\n        //            {\r\n        //              \"id\": 0,\r\n        //              \"name\": \"john\"\r\n        //            },\r\n        //            {\r\n        //              \"id\": 1,\r\n        //              \"name\": \"delta\"\r\n        //            }\r\n        //          ],\r\n        //          \"rounds\": [\r\n        //            {\r\n        //              \"round\": 0,\r\n        //              \"scores\": [\r\n        //                {\r\n        //                  \"id\": 0,\r\n        //                  \"countCardsScore\": 0,\r\n        //                  \"biribaScore\": 0,\r\n        //                  \"penalties\": 0,\r\n        //                  \"close\": false\r\n        //                },\r\n        //                {\r\n        //                 \"id\": 1,\r\n        //                 \"countCardsScore\": 0,\r\n        //                 \"biribaScore\": 0,\r\n        //                 \"penalties\": 0,\r\n        //                 \"close\": false\r\n        //               },\r\n        //              ],\r\n        //              \"cardDealer\": 0,\r\n        //              \"biribaDealer\": 1,\r\n        //              \"trumpNumber\": \"\",\r\n        //              \"trumpSymbol\": \"\"\r\n        //            },\r\n        //            {\r\n        //             \"round\": 1,\r\n        //             \"scores\": [\r\n        //               {\r\n        //                 \"id\": 0,\r\n        //                 \"countCardsScore\": 0,\r\n        //                 \"biribaScore\": 0,\r\n        //                 \"penalties\": 0,\r\n        //                 \"close\": false\r\n        //               },\r\n        //               {\r\n        //                \"id\": 1,\r\n        //                \"countCardsScore\": 0,\r\n        //                \"biribaScore\": 0,\r\n        //                \"penalties\": 0,\r\n        //                \"close\": false\r\n        //              }\r\n        //             ],\r\n        //             \"cardDealer\": 0,\r\n        //             \"biribaDealer\": 1,\r\n        //             \"trumpNumber\": \"\",\r\n        //             \"trumpSymbol\": \"\"\r\n        //           }\r\n        //          ],\r\n        //          \"finished\": false\r\n        //      },\r\n        //    ],\r\n        //    finishedGames: [\r\n        //     {\r\n        //       \"id\": 0,\r\n        //       \"date\": \"01/01/2013|12:12\",\r\n        //       \"teams\": [\r\n        //         {\r\n        //           \"id\": 0,\r\n        //           \"members\": [\r\n        //             {\r\n        //               \"id\": 0\r\n        //             }\r\n        //           ]\r\n        //         },\r\n        //         {\r\n        //          \"id\": 1,\r\n        //          \"members\": [\r\n        //            {\r\n        //              \"id\": 1\r\n        //            }\r\n        //          ]\r\n        //        }\r\n        //       ],\r\n        //       \"players\": [\r\n        //         {\r\n        //           \"id\": 0,\r\n        //           \"name\": \"john\"\r\n        //         },\r\n        //         {\r\n        //           \"id\": 1,\r\n        //           \"name\": \"delta\"\r\n        //         }\r\n        //       ],\r\n        //       \"rounds\": [\r\n        //         {\r\n        //           \"round\": 0,\r\n        //           \"scores\": [\r\n        //             {\r\n        //               \"id\": 0,\r\n        //               \"countCardsScore\": 0,\r\n        //               \"biribaScore\": 0,\r\n        //               \"penalties\": 0,\r\n        //               \"close\": false\r\n        //             },\r\n        //             {\r\n        //              \"id\": 1,\r\n        //              \"countCardsScore\": 0,\r\n        //              \"biribaScore\": 0,\r\n        //              \"penalties\": 0,\r\n        //              \"close\": false\r\n        //            },\r\n        //           ],\r\n        //           \"cardDealer\": 0,\r\n        //           \"biribaDealer\": 1,\r\n        //           \"trumpNumber\": \"\",\r\n        //           \"trumpSymbol\": \"\"\r\n        //         },\r\n        //         {\r\n        //          \"round\": 1,\r\n        //          \"scores\": [\r\n        //            {\r\n        //              \"id\": 0,\r\n        //              \"countCardsScore\": 2020,\r\n        //              \"biribaScore\": 2020,\r\n        //              \"penalties\": 0,\r\n        //              \"close\": false\r\n        //            },\r\n        //            {\r\n        //             \"id\": 1,\r\n        //             \"countCardsScore\": 0,\r\n        //             \"biribaScore\": 0,\r\n        //             \"penalties\": 0,\r\n        //             \"close\": false\r\n        //           }\r\n        //          ],\r\n        //          \"cardDealer\": 0,\r\n        //          \"biribaDealer\": 1,\r\n        //          \"trumpNumber\": \"\",\r\n        //          \"trumpSymbol\": \"\"\r\n        //        }\r\n        //       ],\r\n        //       \"finished\": true\r\n        //   },\r\n        // ],\r\n      }\r\n      ,\r\n      fileId: \"\",\r\n      unfinishedGameId: -1,\r\n      finishedGameId: -1\r\n    };\r\n\r\n    this.initClient = this.initClient.bind(this);\r\n    this.signInFunction = this.signInFunction.bind(this);\r\n    this.signOutFunction = this.signOutFunction.bind(this);\r\n    this.updateSigninStatus = this.updateSigninStatus.bind(this);\r\n    this.handleClientLoad = this.handleClientLoad.bind(this);\r\n    this.setSigninStatus = this.setSigninStatus.bind(this);\r\n    this.checkFileExists = this.checkFileExists.bind(this);\r\n    this.readFile = this.readFile.bind(this);\r\n    this.uploadFile = this.uploadFile.bind(this);\r\n    this.updateBiribaNotes = this.updateBiribaNotes.bind(this);\r\n    this.updateFile = this.updateFile.bind(this);\r\n    this.updateUnfinishedGameId = this.updateUnfinishedGameId.bind(this);\r\n    this.updateFinishedGameId = this.updateFinishedGameId.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    var script = document.createElement('script');\r\n    script.onload = this.handleClientLoad;\r\n    script.src=\"https://apis.google.com/js/api.js\";\r\n    document.body.appendChild(script);\r\n  }\r\n\r\n  handleClientLoad = () => {\r\n    window.gapi.load('client:auth2', this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    try {\r\n      window.gapi.client.init({\r\n          'apiKey': API_KEY,\r\n          'clientId': CLIENT_ID,\r\n          'scope': SCOPE,\r\n          'discoveryDocs': [DISCOVERY_URL]\r\n        }).then(() => {\r\n          this.setState({\r\n            googleAuth: window.gapi.auth2.getAuthInstance()\r\n          });\r\n          this.state.googleAuth.isSignedIn.listen(this.updateSigninStatus);\r\n      });\r\n    } catch(e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  signInFunction = () => {\r\n    try {\r\n      this.state.googleAuth.signIn();\r\n      this.updateSigninStatus();\r\n    } catch(e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  signOutFunction = () => {\r\n    this.state.googleAuth.signOut();\r\n    this.updateSigninStatus();\r\n  }\r\n\r\n  updateSigninStatus = () => {\r\n    this.setSigninStatus();\r\n  }\r\n\r\n  setSigninStatus = async () => {\r\n    this.setState({\r\n      userMail: \"\"\r\n    });\r\n\r\n    var user = await this.state.googleAuth.currentUser.get();\r\n    var isAuthorized = user.hasGrantedScopes(SCOPE);\r\n    if(isAuthorized){\r\n      this.setState({\r\n        userMail: user.vt.cu\r\n      });\r\n    }\r\n\r\n    //load data if exist\r\n    this.readFile().then((success) => {\r\n      console.log(\"File read : \"+success);\r\n      this.setState({\r\n        biribaNotes: JSON.parse(success.body)\r\n      });\r\n    }).catch((error) => {\r\n      // no available unfinished game\r\n      console.log(\"No available file : \"+error);\r\n    });\r\n  }\r\n\r\n  checkFileExists = async () => {\r\n    return new Promise((resolve, reject) => {\r\n      var req = window.gapi.client.drive.files.list({q: \"name='biriba-notes'\"});\r\n      req.execute((r) => {\r\n        if(r.files && r.files.length && r.files[0].id){\r\n          resolve(r.files[0].id);\r\n        } else {\r\n          reject(null);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  readFile = async () => {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      this.checkFileExists().then((fileId) => {\r\n        this.setState({\r\n          fileId: fileId\r\n        });\r\n\r\n        var request = window.gapi.client.drive.files.get({\r\n            fileId: fileId,\r\n            alt: 'media'\r\n        });\r\n  \r\n        request.then((success) => {\r\n        \r\n          console.log(\"file with this id found\");\r\n          resolve(success);\r\n        \r\n        }).catch((error) => {\r\n          console.log(\"file with this id does not exist\");\r\n          reject(\"ID_NOT_EXIST\");\r\n        });\r\n  \r\n      }).catch((error) => {\r\n        console.log(\"file with this name does not exist\");\r\n        reject(\"NAME_NOT_EXIT\");\r\n      });\r\n    });\r\n  }\r\n\r\n  uploadFile = (biribaNotes) => {\r\n    const boundary = '-------314159265358979323846264';\r\n    const delimiter = \"\\r\\n--\" + boundary + \"\\r\\n\";\r\n    const close_delim = \"\\r\\n--\" + boundary + \"--\";\r\n    var base64Data = btoa(JSON.stringify(biribaNotes));\r\n    var multipartRequestBody =\r\n        delimiter +\r\n        'Content-Type: application/json\\r\\n\\r\\n' +\r\n        JSON.stringify({\"title\": \"biriba-notes\"}) +\r\n        delimiter +\r\n        'Content-Type: ' + \"text/plain\" + '\\r\\n' +\r\n        'Content-Transfer-Encoding: base64\\r\\n' +\r\n        '\\r\\n' +\r\n        base64Data +\r\n        close_delim;\r\n    var request = window.gapi.client.request({\r\n        'path': '/upload/drive/v2/files',\r\n        'method': 'POST',\r\n        'params': {'uploadType': 'multipart'},\r\n        'headers': {\r\n          'Content-Type': 'multipart/mixed; boundary=\"' + boundary + '\"'\r\n        },\r\n        'body': multipartRequestBody});\r\n    request.execute(function(res) {\r\n      console.log('New file upploaded!');\r\n    });\r\n  };\r\n\r\n  updateBiribaNotes(updatedBiribaNotes) {\r\n    this.setState({\r\n      biribaNotes: updatedBiribaNotes\r\n    });\r\n  }\r\n\r\n  updateFile = (biribaNotes) => {\r\n    const boundary = '-------314159265358979323846264';\r\n    const delimiter = \"\\r\\n--\" + boundary + \"\\r\\n\";\r\n    const close_delim = \"\\r\\n--\" + boundary + \"--\";\r\n    var base64Data = btoa(JSON.stringify(biribaNotes));\r\n    var multipartRequestBody =\r\n        delimiter +\r\n        'Content-Type: application/json\\r\\n\\r\\n' +\r\n        JSON.stringify({\"title\": \"biriba-notes\"}) +\r\n        delimiter +\r\n        'Content-Type: ' + \"text/plain\" + '\\r\\n' +\r\n        'Content-Transfer-Encoding: base64\\r\\n' +\r\n        '\\r\\n' +\r\n        base64Data +\r\n        close_delim;\r\n    var request = window.gapi.client.request({\r\n        'path': '/upload/drive/v2/files/' + this.state.fileId,\r\n        'method': 'PUT',\r\n        'params': {'uploadType': 'multipart', 'alt': 'json'},\r\n        'headers': {\r\n          'Content-Type': 'multipart/mixed; boundary=\"' + boundary + '\"'\r\n        },\r\n        'body': multipartRequestBody});\r\n    request.execute(function(res) {\r\n      console.log('File updated!');\r\n    });\r\n  }\r\n\r\n  updateUnfinishedGameId(id) {\r\n    this.setState({\r\n      unfinishedGameId: id\r\n    });\r\n  }\r\n\r\n  updateFinishedGameId(id) {\r\n    this.setState({\r\n      finishedGameId: id\r\n    });\r\n  }\r\n\r\n  render() {\r\n    \r\n    var screen = \"\";\r\n    var header = \"\";\r\n\r\n    if(this.state.userMail === \"\" || this.state.userMail === undefined) {\r\n      screen = <Login signInFunction={this.signInFunction} />;\r\n    } else {\r\n      screen = <Menu\r\n                biribaNotes={this.state.biribaNotes}\r\n                updateBiribaNotes={this.updateBiribaNotes}\r\n                uploadFile={this.uploadFile} \r\n                updateFile={this.updateFile}\r\n                updateUnfinishedGameId={this.updateUnfinishedGameId}\r\n                updateFinishedGameId={this.updateFinishedGameId}\r\n                unfinishedGameId={this.state.unfinishedGameId}\r\n                finishedGameId={this.state.finishedGameId}\r\n              />;\r\n      header = <Logout userMail={this.state.userMail} signOutFunction={this.signOutFunction} />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n          {header}\r\n          {screen}\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}