{"version":3,"sources":["Login.js","NewGame.js","UnfinishedGames.js","UnfinishedGame.js","Menu.js","Logout.js","Keys.js","App.js","index.js"],"names":["Login","className","onClick","this","props","signInFunction","React","Component","NewGame","state","numberOfPlayers","numberOfTeams","players","teams","onChangeNumberOfPlayers","bind","submitNumberOfPlayers","onChangePlayerNames","submitNumberOfTeams","onChangeNumberOfTeams","getAvailablePlayers","addPlayerToTeam","removePlayerFromTeam","createGameNote","getDateToString","e","setState","target","value","i","push","playerId","id","split","playerName","newPlayers","flag","forEach","player","index","name","members","availablePlayers","pIndex","team","tIndex","member","mIndex","Number","args","teamId","newTeams","newTeamMembers","biribaNotes","updatedBiribaNotes","newRound","scores","newUnfinishedGame","unfinishedGames","length","updateBiribaNotes","console","log","updateFile","finishedGames","uploadFile","history","cal","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","playersDiv","item","key","type","maxLength","onChange","required","unshift","placeholder","minLength","max","min","style","teamsDiv","availablePlayersDiv","availablePlayer","APIndex","selectedPlayers","to","withRouter","UnfinishedGames","enterUnfinishedGame","unfinishedGameId","updateUnfinishedGameId","unfinishedGamesDiv","unfinishedGame","uIndex","maxScore","teamsTotalScore","rounds","round","rIndex","score","sIndex","biribaScore","countCardsScore","date","UnfinishedGame","Menu","exact","path","UnfinishedGameId","Logout","userMail","signOutFunction","Keys","SCOPE","API_KEY","getAPIKey","CLIENT_ID","getClientID","App","handleClientLoad","window","gapi","load","initClient","client","init","then","googleAuth","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","signIn","signOut","setSigninStatus","a","currentUser","get","user","hasGrantedScopes","vt","cu","readFile","success","JSON","parse","body","catch","error","checkFileExists","Promise","resolve","reject","drive","files","list","q","execute","r","fileId","alt","boundary","delimiter","base64Data","btoa","stringify","multipartRequestBody","request","res","script","document","createElement","onload","src","appendChild","screen","header","undefined","ReactDOM","render","StrictMode","getElementById"],"mappings":"6ZA6BeA,G,mLAvBT,OACE,yBAAKC,UAAU,SACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,SACX,uDACA,kHAMJ,4BACEC,QAASC,KAAKC,MAAMC,gBADtB,2B,GAdIC,IAAMC,Y,6BCQpBC,E,kDAEJ,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CACXC,gBAAiB,EACjBC,cAAe,EACfC,QAAS,GACTC,MAAO,IAET,EAAKC,wBAA0B,EAAKA,wBAAwBC,KAA7B,gBAC/B,EAAKC,sBAAwB,EAAKA,sBAAsBD,KAA3B,gBAC7B,EAAKE,oBAAsB,EAAKA,oBAAoBF,KAAzB,gBAC3B,EAAKG,oBAAsB,EAAKA,oBAAoBH,KAAzB,gBAC3B,EAAKI,sBAAwB,EAAKA,sBAAsBJ,KAA3B,gBAC7B,EAAKK,oBAAsB,EAAKA,oBAAoBL,KAAzB,gBAC3B,EAAKM,gBAAkB,EAAKA,gBAAgBN,KAArB,gBACvB,EAAKO,qBAAuB,EAAKA,qBAAqBP,KAA1B,gBAC5B,EAAKQ,eAAiB,EAAKA,eAAeR,KAApB,gBACtB,EAAKS,gBAAkB,EAAKA,gBAAgBT,KAArB,gBAjBN,E,oEAoBKU,GACtBtB,KAAKuB,SAAS,CACZhB,gBAAiBe,EAAEE,OAAOC,MAC1BhB,QAAS,O,8CAKX,GAAGT,KAAKM,MAAMC,gBAAkB,GAAKP,KAAKM,MAAMC,iBAAmB,GAAI,CAErE,IADA,IAAIE,EAAU,GACNiB,EAAI,EAAGA,EAAI1B,KAAKM,MAAMC,gBAAiBmB,IAC7CjB,EAAQkB,KAAK,CACX,GAAMD,EACN,KAAQ,KAGZ1B,KAAKuB,SAAS,CACZd,QAASA,O,0CAKKa,GAElB,IAAIM,EAAWN,EAAEE,OAAOK,GAAGC,MAAM,KAAK,GAClCC,EAAaT,EAAEE,OAAOC,MACtBO,EAAahC,KAAKM,MAAMG,QAC5BuB,EAAWJ,GAAX,KAA+BG,EAC/B/B,KAAKuB,SAAS,CACZd,QAASuB,M,4CAISV,GACpBtB,KAAKuB,SAAS,CACZb,MAAO,GACPF,cAAec,EAAEE,OAAOC,U,4CAK1B,GAAGzB,KAAKM,MAAME,eAAiB,GAAKR,KAAKM,MAAME,eAAiBR,KAAKM,MAAMC,gBAAiB,CAE1F,IAAI0B,GAAO,EAOX,GANAjC,KAAKM,MAAMG,QAAQyB,SAAQ,SAACC,EAAQC,GACf,KAAhBD,EAAOE,OACRJ,GAAO,OAIPA,EAEF,IADA,IAAIvB,EAAQ,GACJgB,EAAI,EAAGA,EAAI1B,KAAKM,MAAME,cAAekB,IAC3ChB,EAAMiB,KAAK,CACT,GAAMD,EACN,QAAW,KAEb1B,KAAKuB,SAAS,CACZb,MAAOA,O,4CAOM,IAAD,OACpB,GAAGV,KAAKM,MAAMG,UAAY,IAAMT,KAAKM,MAAMI,QAAU,IAAMV,KAAKM,MAAMI,MAAM4B,UAAY,GAAI,CAC1F,IAAIC,EAAmB,GAcvB,OAbAvC,KAAKM,MAAMG,QAAQyB,SAAQ,SAACC,EAAQK,GAClC,IAAIP,GAAO,EACX,EAAK3B,MAAMI,MAAMwB,SAAQ,SAACO,EAAMC,GAC9BD,EAAI,QAAYP,SAAQ,SAACS,EAAQC,GAC5BC,OAAOV,EAAM,MAAYU,OAAOF,EAAM,MACvCV,GAAO,SAIVA,GACDM,EAAiBZ,KAAKQ,MAGnBI,EAET,OAAO,O,sCAGOjB,GAGd,IAAIwB,EAAOxB,EAAEE,OAAOK,GAAGC,MAAM,KACzBF,EAAWkB,EAAK,GAChBC,EAASD,EAAK,GAEdE,EAAWhD,KAAKM,MAAMI,MAC1BsC,EAASD,GAAT,QAA4BpB,KAC1B,CACE,GAAMC,IAGV5B,KAAKuB,SAAS,CACZb,MAAOsC,M,2CAIU1B,GAGnB,IACIM,EADON,EAAEE,OAAOK,GAAGC,MAAM,KACT,GAEhBkB,EAAW,GACfhD,KAAKM,MAAMI,MAAMwB,SAAQ,SAACO,EAAMC,GAC9B,IAAIO,EAAiB,GACrBR,EAAI,QAAYP,SAAQ,SAACS,EAAQC,GAC5BC,OAAOF,EAAM,MAAYE,OAAOjB,IACjCqB,EAAetB,KAAK,CAAC,GAAMgB,EAAM,QAGrCK,EAASrB,KAAK,CACZ,GAAMc,EAAI,GACV,QAAWQ,OAIfjD,KAAKuB,SAAS,CACZb,MAAOsC,M,uCAKT,GAAGhD,KAAKC,MAAMiD,YAAa,CAGzB,IAAIC,EAAqBnD,KAAKC,MAAMiD,YAChCE,EAAW,CACb,OAAU,EACV,OAAU,IAEZpD,KAAKM,MAAMI,MAAMwB,SAAQ,SAACO,EAAMC,GAC9BU,EAASC,OAAO1B,KAAK,CACnB,OAAUc,EAAKZ,GACf,gBAAmB,EACnB,YAAe,OAGnB,IAAIyB,EAAoB,CACtB,GAAMH,EAAmBI,gBAAgBC,OAAS,EAClD,KAAQxD,KAAKqB,kBACb,MAASrB,KAAKM,MAAMI,MACpB,QAAWV,KAAKM,MAAMG,QACtB,OAAU,CAAC2C,GACX,UAAY,GAEdD,EAAmBI,gBAAgB5B,KAAK2B,GACxCtD,KAAKC,MAAMwD,kBAAkBN,GAC7BO,QAAQC,IAAI,mCACZ3D,KAAKC,MAAM2D,iBAEN,CAGL,IAAIR,EAAW,CACb,OAAU,EACV,OAAU,IAEZpD,KAAKM,MAAMI,MAAMwB,SAAQ,SAACO,EAAMC,GAC9BU,EAASC,OAAO1B,KAAK,CACnB,OAAUc,EAAKZ,GACf,gBAAmB,EACnB,YAAe,OAGnB,IAAIsB,EAAqBnD,KAAKC,MAAMiD,YACpCC,EAAqB,CACnBI,gBAAiB,CACf,CACE,GAAM,EACN,KAAQvD,KAAKqB,kBACb,MAASrB,KAAKM,MAAMI,MACpB,QAAWV,KAAKM,MAAMG,QACtB,OAAU,CAAC2C,GACX,UAAY,IAGhBS,cAAe,IAEjB7D,KAAKC,MAAMwD,kBAAkBN,GAC7BO,QAAQC,IAAI,8BACZ3D,KAAKC,MAAM6D,aAEb9D,KAAKC,MAAM8D,QAAQpC,KAAK,a,wCAIxB,IAAIqC,EAAM,IAAIC,KACVC,EAAOF,EAAIG,cACXC,EAAQJ,EAAIK,WAAa,EAC7BD,EAASA,EAAQ,GAAM,IAAMA,EAAQA,EACrC,IAAIE,EAAMN,EAAIO,UACdD,EAAOA,EAAM,GAAM,IAAMA,EAAMA,EAC/B,IAAIE,EAAQR,EAAIS,WAAa,EAC7BD,EAASA,EAAQ,GAAM,IAAMA,EAAQA,EACrC,IAAIE,EAAUV,EAAIW,aAElB,OAAOL,EAAI,IAAIF,EAAM,IAAIF,EAAK,IAAIM,EAAM,KADxCE,EAAWA,EAAU,GAAM,IAAMA,EAAUA,K,+BAInC,IAAD,OAEDE,EAAa,GACjB,GAAG5E,KAAKM,MAAMG,UAAY,GAAI,CAC5B,IAAIwB,GAAO,EACXjC,KAAKM,MAAMG,QAAQyB,SAAQ,SAAC2C,EAAMzC,GAChCH,GAAO,EACP2C,EAAWjD,KACT,yBAAK7B,UAAU,iBAAiBgF,IAAK,aAAa1C,GAChD,uBAAGtC,UAAU,SAAb,WAA8BsC,EAAM,GACpC,2BACE2C,KAAK,OACLC,UAAU,KACVnD,GAAI,cAAcO,EAClBX,MAAO,EAAKnB,MAAMG,QAAQ2B,GAAnB,KACP6C,SAAU,EAAKnE,oBACfoE,UAAU,IAEZ,wCAIHjD,IACD2C,EAAWO,QAAQ,yBAAKrF,UAAU,OAAOgF,IAAI,qBAC7CF,EAAWjD,KACL,yBAAK7B,UAAU,UAAUgF,IAAK,kBAC5B,2BACEC,KAAK,SACLK,YAAY,IACZJ,UAAU,IACVK,UAAU,IACVC,IAAKtF,KAAKM,MAAMC,gBAChBgF,IAAI,IACJ9D,MAAOzB,KAAKM,MAAME,cAClByE,SAAUjF,KAAKgB,sBACfkE,UAAU,IAEZ,8CACA,4BACEH,KAAK,SACLS,MAAO,CAAC,OAAS,QACjB1F,UAAU,wBACVC,QAASC,KAAKe,qBAJhB,uCAYZ,IAAI0E,EAAW,GACf,GAAGzF,KAAKM,MAAMI,QAAU,GAAI,CAC1B,IAAIuB,GAAO,EAEXjC,KAAKM,MAAMI,MAAMwB,SAAQ,SAACO,EAAML,GAC9BH,GAAO,EAEP,IAAIM,EAAmB,EAAKtB,sBACxByE,EAAsB,GAC1BnD,EAAiBL,SAAQ,SAACyD,EAAiBC,GACzCF,EAAoB/D,KAClB,4BACEE,GAAI,mBAAmB8D,EAAe,GAAO,IAAIlD,EAAI,GACrD1C,QAAS,EAAKmB,gBACd4D,IAAK,mBAAmBc,EACxB9F,UAAU,OACP6F,EAAe,UAIrBpD,IAAqB,IAA2B,OAArBA,GAAyD,IAA5BA,EAAiBiB,SAC1EkC,EAAsB,uBAAG5F,UAAU,OAAb,8BAGxB,IAAI+F,EAAkB,GACtBpD,EAAKH,QAAQJ,SAAQ,SAACS,EAAQC,GAC5BiD,EAAgBlE,KACd,4BACEE,GAAI,kBAAkBc,EAAM,GAAO,IAAIF,EAAI,GAC3C1C,QAAS,EAAKoB,qBACd2D,IAAK,kBAAkBlC,EACvB9C,UAAU,OACP,EAAKQ,MAAMG,QAAQkC,EAAM,IAAzB,UAIqB,IAA3BkD,EAAgBrC,SACjBqC,EAAkB,uBAAG/F,UAAU,OAAb,mBAGpB2F,EAAS9D,KACP,yBAAK7B,UAAU,iBAAiBgF,IAAK,WAAW1C,GAC9C,uBAAGtC,UAAU,SAAb,SAA4BsC,EAAM,GAClC,yBAAKtC,UAAU,mBACb,yBAAKA,UAAU,eACb,+CACC+F,GAEH,yBAAK/F,UAAU,eACb,gDACC4F,SAMRzD,IACDwD,EAASN,QAAQ,yBAAKrF,UAAU,OAAOgF,IAAI,mBAC3CW,EAAS9D,KACP,yBAAK7B,UAAU,UAAUgF,IAAK,gBAC5B,4BACEC,KAAK,SACLS,MAAO,CAAC,OAAS,OAAQ,gBAAkB,WAC3C1F,UAAU,wBACVC,QAASC,KAAKoB,gBAJhB,uBAYR,OACE,yBAAKtB,UAAU,WACb,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,UACf,uCACE,kBAAC,IAAD,CAAMgG,GAAG,WACP,uBAAGhG,UAAU,uBAIjB,yBAAKA,UAAU,SAEf,yBAAKA,UAAU,WACb,2BACEiF,KAAK,SACLK,YAAY,IACZJ,UAAU,IACVK,UAAU,IACVC,IAAI,KACJC,IAAI,IACJ9D,MAAOzB,KAAKM,MAAMC,gBAClB0E,SAAUjF,KAAKW,0BAEjB,gDACA,4BACEoE,KAAK,SACLjF,UAAU,wBACVC,QAASC,KAAKa,uBAHhB,6BAQH+D,EAEAa,Q,GAjYStF,IAAMC,WA0Yb2F,cAAW1F,GC1YpB2F,G,wDAEJ,WAAY/F,GAAO,IAAD,8BAChB,cAAMA,IAEDgG,oBAAsB,EAAKA,oBAAoBrF,KAAzB,gBAHX,E,gEAMEU,GAClB,IAAI4E,EAAmB5E,EAAEE,OAAOK,GAAGC,MAAM,KAAK,GAC9C9B,KAAKC,MAAMkG,uBAAuBD,GAClClG,KAAKC,MAAM8D,QAAQpC,KAAK,mC,+BAGhB,IAAD,OAEHyE,EAAqB,GA0CzB,OAxCGpG,KAAKC,MAAMiD,aAAelD,KAAKC,MAAMiD,YAAYK,iBAClDvD,KAAKC,MAAMiD,YAAYK,gBAAgBrB,SAAQ,SAACmE,EAAgBC,GAG9D,IAAIC,GAAY,EAChBF,EAAe3F,MAAMwB,SAAQ,SAACO,EAAMC,GAClC,IAAI8D,EAAkB,EACtBH,EAAeI,OAAOvE,SAAQ,SAACwE,EAAOC,GACpCD,EAAMrD,OAAOnB,SAAQ,SAAC0E,EAAOC,GACxBhE,OAAOJ,EAAKZ,MAAQgB,OAAO+D,EAAM/E,MAClC2E,GAAmBI,EAAME,YAAcF,EAAMG,uBAIhDR,EAAWC,IACZD,EAAWC,MAIfJ,EAAmBzE,KACjB,yBAAK7B,UAAU,sBAAsBgF,IAAK,sBAAsBwB,EAC5DzE,GAAI,kBAAkBwE,EAAexE,GAAI9B,QAAS,EAAKkG,qBACzD,uBAAGnG,UAAU,SAAb,SAA4BwG,GAC5B,yBAAKxG,UAAU,UACb,uBAAGA,UAAU,mBACb,uBAAGA,UAAU,QAAQuG,EAAeW,OAEtC,uCAAaX,EAAe5F,QAAQ+C,QACpC,yCAAe+C,GACf,qCAAWF,EAAe3F,MAAM8C,QAChC,6CAAmB6C,EAAeI,OAAOjD,aAM9C4C,IAAuB,KACxBA,EAAqB,6DAIrB,yBAAKtG,UAAU,mBACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,UACb,+CACA,kBAAC,IAAD,CAAMgG,GAAG,WACP,uBAAGhG,UAAU,uBAIjB,yBAAKA,UAAU,SAEf,yBAAKA,UAAU,WACZsG,IAZP,S,GA3DwBjG,IAAMC,YAgFrB2F,cAAWC,GCnDXiB,G,wDA3Bb,WAAYhH,GAAO,uCACXA,G,qDAIN,OACE,yBAAKH,UAAU,kBACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,UACb,8CAAoBE,KAAKC,MAAMiG,kBAC/B,kBAAC,IAAD,CAAMJ,GAAG,4BACP,uBAAGhG,UAAU,uBAIjB,yBAAKA,UAAU,SAEf,yBAAKA,UAAU,WAAf,mBAXJ,S,GARuBK,IAAMC,YCyEpB8G,E,kDArEb,WAAYjH,GAAO,uCACXA,G,qDAIJ,OACE,kBAAC,IAAD,KACE,yBAAKH,UAAU,QAEb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqH,OAAK,EAACC,KAAK,WAChB,yBAAKtH,UAAU,kBACX,yBAAKA,UAAU,SACX,qCAEJ,kBAAC,IAAD,CAAMgG,GAAG,oBACL,uBAAGhG,UAAU,eACb,8CAEJ,kBAAC,IAAD,CAAMgG,GAAG,4BACL,uBAAGhG,UAAU,eACb,qDAEJ,kBAAC,IAAD,CAAMgG,GAAG,mBACL,uBAAGhG,UAAU,oBACb,yCAKV,kBAAC,IAAD,CAAOqH,OAAK,EAACC,KAAK,oBAChB,kBAAC,EAAD,CACElE,YAAalD,KAAKC,MAAMiD,YACxBO,kBAAmBzD,KAAKC,MAAMwD,kBAC9BK,WAAY9D,KAAKC,MAAM6D,WACvBF,WAAY5D,KAAKC,MAAM2D,cAI3B,kBAAC,IAAD,CAAOuD,OAAK,EAACC,KAAK,4BAChB,kBAAC,EAAD,CACElE,YAAalD,KAAKC,MAAMiD,YACxBO,kBAAmBzD,KAAKC,MAAMwD,kBAC9BK,WAAY9D,KAAKC,MAAM6D,WACvBF,WAAY5D,KAAKC,MAAM2D,WACvBuC,uBAAwBnG,KAAKC,MAAMkG,uBACnCD,iBAAkBlG,KAAKC,MAAMiG,oBAIjC,kBAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,iCAChB,kBAAC,EAAD,CACEC,iBAAkBrH,KAAKC,MAAMiG,iBAC7BhD,YAAalD,KAAKC,MAAMiD,YACxBO,kBAAmBzD,KAAKC,MAAMwD,kBAC9BK,WAAY9D,KAAKC,MAAM6D,WACvBF,WAAY5D,KAAKC,MAAM2D,qB,GA1DtBzD,IAAMC,WCWVkH,G,6KAlBT,OACE,yBAAKxH,UAAU,UACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,QACb,uBAAGA,UAAU,eAAe,2BAAIE,KAAKC,MAAMsH,WAE7C,4BACExH,QAASC,KAAKC,MAAMuH,iBAElB,uBAAG1H,UAAU,0B,GAZZK,IAAMC,YCKVqH,E,yGANT,MAAO,4C,oCAIP,MAAO,+E,KCEXC,EAAQ,wCAERC,EAAUF,EAAKG,YACfC,EAAYJ,EAAKK,cAwSNC,E,kDA9Ob,aAAe,IAAD,8BACZ,gBAgCFC,iBAAmB,WACjBC,OAAOC,KAAKC,KAAK,eAAgB,EAAKC,aAlC1B,EAqCdA,WAAa,WACX,IACEH,OAAOC,KAAKG,OAAOC,KAAK,CACpB,OAAUX,EACV,SAAYE,EACZ,MAASH,EACT,cAAiB,CAvGP,gEAwGTa,MAAK,WACN,EAAKhH,SAAS,CACZiH,WAAYP,OAAOC,KAAKO,MAAMC,oBAEhC,EAAKpI,MAAMkI,WAAWG,WAAWC,OAAO,EAAKC,uBAEjD,MAAMvH,GACNoC,QAAQC,IAAIrC,KAnDF,EAuDdpB,eAAiB,WACf,IACE,EAAKI,MAAMkI,WAAWM,SACtB,EAAKD,qBACL,MAAMvH,GACNoC,QAAQC,IAAIrC,KA5DF,EAgEdkG,gBAAkB,WAChB,EAAKlH,MAAMkI,WAAWO,UACtB,EAAKF,sBAlEO,EAqEdA,mBAAqB,WACnB,EAAKG,mBAtEO,EAyEdA,gBAzEc,sBAyEI,4BAAAC,EAAA,6DAChB,EAAK1H,SAAS,CACZgG,SAAU,KAFI,SAKC,EAAKjH,MAAMkI,WAAWU,YAAYC,MALnC,OAKZC,EALY,OAMGA,EAAKC,iBAAiB3B,IAEvC,EAAKnG,SAAS,CACZgG,SAAU6B,EAAKE,GAAGC,KAKtB,EAAKC,WAAWjB,MAAK,SAACkB,GACpB/F,QAAQC,IAAI,eAAe8F,GAC3B,EAAKlI,SAAS,CACZ2B,YAAawG,KAAKC,MAAMF,EAAQG,WAEjCC,OAAM,SAACC,GAERpG,QAAQC,IAAI,uBAAuBmG,MArBrB,2CAzEJ,EAkGdC,gBAlGc,sBAkGI,sBAAAd,EAAA,+EACT,IAAIe,SAAQ,SAACC,EAASC,GACjBjC,OAAOC,KAAKG,OAAO8B,MAAMC,MAAMC,KAAK,CAACC,EAAG,wBAC9CC,SAAQ,SAACC,GACRA,EAAEJ,OAASI,EAAEJ,MAAM5G,QAAUgH,EAAEJ,MAAM,GAAGvI,GACzCoI,EAAQO,EAAEJ,MAAM,GAAGvI,IAEnBqI,EAAO,aAPG,2CAlGJ,EA+GdV,SA/Gc,sBA+GH,sBAAAP,EAAA,+EACF,IAAIe,SAAQ,SAACC,EAASC,GAE3B,EAAKH,kBAAkBxB,MAAK,SAACkC,GAC3B,EAAKlJ,SAAS,CACZkJ,OAAQA,IAGIxC,OAAOC,KAAKG,OAAO8B,MAAMC,MAAMjB,IAAI,CAC7CsB,OAAQA,EACRC,IAAK,UAGDnC,MAAK,SAACkB,GAEZ/F,QAAQC,IAAI,2BACZsG,EAAQR,MAEPI,OAAM,SAACC,GACRpG,QAAQC,IAAI,oCACZuG,EAAO,sBAGRL,OAAM,SAACC,GACRpG,QAAQC,IAAI,sCACZuG,EAAO,wBAzBF,2CA/GG,EA6IdpG,WAAa,WACX,IAAM6G,EAAW,kCACXC,EAAY,SAAWD,EAAW,OAEpCE,EAAaC,KAAKpB,KAAKqB,UAAU,EAAKzK,MAAM4C,cAC5C8H,EACAJ,EACA,yCACAlB,KAAKqB,UAAU,CAAC,MAAS,iBACzBH,EAHAA,wEAOAC,EAVgB,0CAYN5C,OAAOC,KAAKG,OAAO4C,QAAQ,CACrC,KAAQ,yBACR,OAAU,OACV,OAAU,CAAC,WAAc,aACzB,QAAW,CACT,eAAgB,8BAAgCN,EAAW,KAE7D,KAAQK,IACJT,SAAQ,SAASW,GACvBxH,QAAQC,IAAI,2BArKF,EA+KdC,WAAa,WACX,IAAM+G,EAAW,kCACXC,EAAY,SAAWD,EAAW,OAEpCE,EAAaC,KAAKpB,KAAKqB,UAAU,EAAKzK,MAAM4C,cAC5C8H,EACAJ,EACA,yCACAlB,KAAKqB,UAAU,CAAC,MAAS,iBACzBH,EAHAA,wEAOAC,EAVgB,0CAYN5C,OAAOC,KAAKG,OAAO4C,QAAQ,CACrC,KAAQ,0BAA4B,EAAK3K,MAAMmK,OAC/C,OAAU,MACV,OAAU,CAAC,WAAc,YAAa,IAAO,QAC7C,QAAW,CACT,eAAgB,8BAAgCE,EAAW,KAE7D,KAAQK,IACJT,SAAQ,SAASW,GACvBxH,QAAQC,IAAI,qBApMd,EAAKrD,MAAQ,CACX+B,KAAM,GACNmG,WAAY,GACZjB,SAAU,GACVrE,YAAa,GACbuH,OAAQ,GACRvE,kBAAmB,GAGrB,EAAKkC,WAAa,EAAKA,WAAWxH,KAAhB,gBAClB,EAAKV,eAAiB,EAAKA,eAAeU,KAApB,gBACtB,EAAK4G,gBAAkB,EAAKA,gBAAgB5G,KAArB,gBACvB,EAAKiI,mBAAqB,EAAKA,mBAAmBjI,KAAxB,gBAC1B,EAAKoH,iBAAmB,EAAKA,iBAAiBpH,KAAtB,gBACxB,EAAKoI,gBAAkB,EAAKA,gBAAgBpI,KAArB,gBACvB,EAAKmJ,gBAAkB,EAAKA,gBAAgBnJ,KAArB,gBACvB,EAAK4I,SAAW,EAAKA,SAAS5I,KAAd,gBAChB,EAAKkD,WAAa,EAAKA,WAAWlD,KAAhB,gBAClB,EAAK6C,kBAAoB,EAAKA,kBAAkB7C,KAAvB,gBACzB,EAAKgD,WAAa,EAAKA,WAAWhD,KAAhB,gBAClB,EAAKuF,uBAAyB,EAAKA,uBAAuBvF,KAA5B,gBAvBlB,E,gEA2BZ,IAAIuK,EAASC,SAASC,cAAc,UACpCF,EAAOG,OAAStL,KAAKgI,iBACrBmD,EAAOI,IAAI,oCACXH,SAASxB,KAAK4B,YAAYL,K,wCA2IVhI,GAChBnD,KAAKuB,SAAS,CACZ2B,YAAaC,M,6CAgCMtB,GACrB7B,KAAKuB,SAAS,CACZ2E,iBAAkBrE,M,+BAMpB,IAAI4J,EAAS,GACTC,EAAS,GAgBb,MAd2B,KAAxB1L,KAAKM,MAAMiH,eAA2CoE,IAAxB3L,KAAKM,MAAMiH,SAC1CkE,EAAS,kBAAC,EAAD,CAAOvL,eAAgBF,KAAKE,kBAErCuL,EAAS,kBAAC,EAAD,CACCvI,YAAalD,KAAKM,MAAM4C,YACxBO,kBAAmBzD,KAAKyD,kBACxBK,WAAY9D,KAAK8D,WACjBF,WAAY5D,KAAK4D,WACjBuC,uBAAwBnG,KAAKmG,uBAC7BD,iBAAkBlG,KAAKkG,mBAEjCwF,EAAS,kBAAC,EAAD,CAAQnE,SAAUvH,KAAKM,MAAMiH,SAAUC,gBAAiBxH,KAAKwH,mBAIpE,yBAAK1H,UAAU,OACZ4L,EACAD,O,GA/ROtL,IAAMC,WCRxBwL,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFV,SAASW,eAAe,W","file":"static/js/main.cbf16920.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n  render() {\r\n      return (\r\n        <div className=\"Login\">\r\n            <div className=\"login-container\">\r\n                <div className=\"intro\">\r\n                    <h1>Welcome to Biriba Notes</h1>\r\n                    <p>\r\n                      Here you can here you can here\r\n                      you can here you can here you can\r\n                      here you can here\r\n                    </p>\r\n                </div>\r\n                <button\r\n                  onClick={this.props.signInFunction}\r\n                >\r\n                    Login with Google\r\n                </button>\r\n            </div>\r\n        </div>\r\n      );\r\n  }\r\n\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport './NewGame.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  withRouter,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass NewGame extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      numberOfPlayers: 0,\r\n      numberOfTeams: 0,\r\n      players: [],\r\n      teams: [],\r\n    };\r\n    this.onChangeNumberOfPlayers = this.onChangeNumberOfPlayers.bind(this);\r\n    this.submitNumberOfPlayers = this.submitNumberOfPlayers.bind(this);\r\n    this.onChangePlayerNames = this.onChangePlayerNames.bind(this);\r\n    this.submitNumberOfTeams = this.submitNumberOfTeams.bind(this);\r\n    this.onChangeNumberOfTeams = this.onChangeNumberOfTeams.bind(this);\r\n    this.getAvailablePlayers = this.getAvailablePlayers.bind(this);\r\n    this.addPlayerToTeam = this.addPlayerToTeam.bind(this);\r\n    this.removePlayerFromTeam = this.removePlayerFromTeam.bind(this);\r\n    this.createGameNote = this.createGameNote.bind(this);\r\n    this.getDateToString = this.getDateToString.bind(this);\r\n  }\r\n\r\n  onChangeNumberOfPlayers(e) {\r\n    this.setState({\r\n      numberOfPlayers: e.target.value,\r\n      players: []\r\n    });\r\n  }\r\n\r\n  submitNumberOfPlayers() {\r\n    if(this.state.numberOfPlayers > 1 && this.state.numberOfPlayers <= 20) {\r\n      let players = [];\r\n      for(let i = 0; i < this.state.numberOfPlayers; i++) {\r\n        players.push({\r\n          \"id\": i,\r\n          \"name\": \"\"\r\n        });\r\n      }\r\n      this.setState({\r\n        players: players\r\n      });\r\n    }\r\n  }\r\n\r\n  onChangePlayerNames(e) {\r\n    // given id of form : playerName_# where # is the index in json\r\n    let playerId = e.target.id.split(\"_\")[1]; \r\n    let playerName = e.target.value;\r\n    let newPlayers = this.state.players;\r\n    newPlayers[playerId][\"name\"] = playerName;\r\n    this.setState({\r\n      players: newPlayers\r\n    });\r\n  }\r\n\r\n  onChangeNumberOfTeams(e) {\r\n    this.setState({\r\n      teams: [],\r\n      numberOfTeams: e.target.value\r\n    });\r\n  }\r\n\r\n  submitNumberOfTeams() {\r\n    if(this.state.numberOfTeams >= 2 && this.state.numberOfTeams <= this.state.numberOfPlayers) {\r\n\r\n      let flag = false;\r\n      this.state.players.forEach((player, index) => {\r\n        if(player.name === \"\") {\r\n          flag = true;\r\n        }\r\n      });\r\n\r\n      if(!flag) {\r\n        let teams = [];\r\n        for(let i = 0; i < this.state.numberOfTeams; i++) {\r\n          teams.push({\r\n            \"id\": i,\r\n            \"members\": []\r\n          });\r\n          this.setState({\r\n            teams: teams\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getAvailablePlayers() {\r\n    if(this.state.players !== [] && this.state.teams !== [] && this.state.teams.members !== []) {\r\n      let availablePlayers = [];\r\n      this.state.players.forEach((player, pIndex) => {\r\n        let flag = true;\r\n        this.state.teams.forEach((team, tIndex) => {\r\n          team[\"members\"].forEach((member, mIndex) => {\r\n            if(Number(player[\"id\"]) === Number(member[\"id\"]) ) {\r\n              flag = false;\r\n            }\r\n          });\r\n        });\r\n        if(flag) {\r\n          availablePlayers.push(player);\r\n        }\r\n      });\r\n      return availablePlayers;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  addPlayerToTeam(e) {\r\n    // given id of form : availablePlayer_#1_#2 where #1 is the index of player id in json\r\n    // and #2 is the id of the team to be added if pressed\r\n    let args = e.target.id.split(\"_\");\r\n    let playerId = args[1]; \r\n    let teamId = args[2];\r\n\r\n    let newTeams = this.state.teams;\r\n    newTeams[teamId][\"members\"].push(\r\n      {\r\n        \"id\": playerId\r\n      }\r\n    );\r\n    this.setState({\r\n      teams: newTeams\r\n    });\r\n  }\r\n\r\n  removePlayerFromTeam(e) {\r\n    // given id of form : selectedPlayer_#1_#2 where #1 is the index of player id in json\r\n    // and #2 is the id of the team to be added if pressed\r\n    let args = e.target.id.split(\"_\");\r\n    let playerId = args[1];\r\n\r\n    let newTeams = [];\r\n    this.state.teams.forEach((team, tIndex) => {\r\n      let newTeamMembers = [];\r\n      team[\"members\"].forEach((member, mIndex) => {\r\n        if(Number(member[\"id\"]) !== Number(playerId)) {\r\n          newTeamMembers.push({\"id\": member[\"id\"]});\r\n        }\r\n      });\r\n      newTeams.push({\r\n        \"id\": team[\"id\"],\r\n        \"members\": newTeamMembers\r\n      })\r\n    });\r\n\r\n    this.setState({\r\n      teams: newTeams\r\n    });\r\n  }\r\n\r\n  createGameNote() {\r\n    if(this.props.biribaNotes) {\r\n      // file was found, must update it\r\n      // first update biribaNotes.txt with the new game and first round\r\n      let updatedBiribaNotes = this.props.biribaNotes;\r\n      let newRound = {\r\n        \"number\": 0,\r\n        \"scores\": []\r\n      };\r\n      this.state.teams.forEach((team, tIndex) => {\r\n        newRound.scores.push({\r\n          \"teamId\": team.id,\r\n          \"countCardsScore\": 0,\r\n          \"biribaScore\": 0\r\n        });\r\n      });\r\n      let newUnfinishedGame = {\r\n        \"id\": updatedBiribaNotes.unfinishedGames.length + 1,\r\n        \"date\": this.getDateToString(),\r\n        \"teams\": this.state.teams,\r\n        \"players\": this.state.players,\r\n        \"rounds\": [newRound],\r\n        \"finished\": false\r\n      };\r\n      updatedBiribaNotes.unfinishedGames.push(newUnfinishedGame);\r\n      this.props.updateBiribaNotes(updatedBiribaNotes);\r\n      console.log(\"calling update existing file...\");\r\n      this.props.updateFile();\r\n      \r\n    } else {\r\n      // file with this name was not found, must create new file\r\n      // first initialize biribaNotes.txt with the first game and first round\r\n      let newRound = {\r\n        \"number\": 1,\r\n        \"scores\": []\r\n      };\r\n      this.state.teams.forEach((team, tIndex) => {\r\n        newRound.scores.push({\r\n          \"teamId\": team.id,\r\n          \"countCardsScore\": 0,\r\n          \"biribaScore\": 0\r\n        });\r\n      });\r\n      let updatedBiribaNotes = this.props.biribaNotes;\r\n      updatedBiribaNotes = {\r\n        unfinishedGames: [\r\n          {\r\n            \"id\": 0,\r\n            \"date\": this.getDateToString(),\r\n            \"teams\": this.state.teams,\r\n            \"players\": this.state.players,\r\n            \"rounds\": [newRound],\r\n            \"finished\": false\r\n          },\r\n        ],\r\n        finishedGames: []\r\n      };\r\n      this.props.updateBiribaNotes(updatedBiribaNotes);\r\n      console.log(\"calling upload new file...\");\r\n      this.props.uploadFile();\r\n    } \r\n    this.props.history.push(\"/biriba\");\r\n  }\r\n\r\n  getDateToString() {\r\n    let cal = new Date();\r\n    let year = cal.getFullYear();\r\n    let month = cal.getMonth() + 1;\r\n    month = (month < 10) ? \"0\" + month : month;\r\n    let day = cal.getDate();\r\n    day = (day < 10) ? \"0\" + day : day;\r\n    let hours = cal.getHours() + 1;\r\n    hours = (hours < 10) ? \"0\" + hours : hours;\r\n    let minutes = cal.getMinutes();\r\n    minutes = (minutes < 10) ? \"0\" + minutes : minutes;\r\n    return day+\"/\"+month+\"/\"+year+\"|\"+hours+\":\"+minutes;\r\n  }\r\n\r\n  render() {\r\n\r\n      let playersDiv = [];\r\n      if(this.state.players !== []) {\r\n        let flag = false;\r\n        this.state.players.forEach((item, index) => {\r\n          flag = true;\r\n          playersDiv.push(\r\n            <div className=\"player-section\" key={\"playersDiv\"+index}>\r\n              <p className=\"title\">Player: {index+1}</p>\r\n              <input \r\n                type=\"text\"\r\n                maxLength=\"20\"\r\n                id={\"playerName_\"+index}\r\n                value={this.state.players[index][\"name\"]}\r\n                onChange={this.onChangePlayerNames}\r\n                required={true}\r\n              />\r\n              <p>Name</p>\r\n            </div>\r\n          )\r\n        });\r\n        if(flag) {\r\n          playersDiv.unshift(<div className=\"line\" key=\"playersDiv_0000\"></div>);\r\n          playersDiv.push(\r\n                <div className=\"section\" key={\"playersDiv9999\"}>\r\n                  <input \r\n                    type=\"number\" \r\n                    placeholder=\"2\" \r\n                    maxLength=\"2\"\r\n                    minLength=\"1\"\r\n                    max={this.state.numberOfPlayers}\r\n                    min=\"2\"\r\n                    value={this.state.numberOfTeams}\r\n                    onChange={this.onChangeNumberOfTeams}\r\n                    required={true}\r\n                  />\r\n                  <p>Number of teams</p>\r\n                  <button\r\n                    type=\"submit\"\r\n                    style={{\"height\":\"40px\"}} \r\n                    className=\"submit-players-button\" \r\n                    onClick={this.submitNumberOfTeams} >\r\n                    Submit names and number of teams\r\n                  </button>\r\n              </div>\r\n          );\r\n        }\r\n      }\r\n      \r\n      let teamsDiv = [];\r\n      if(this.state.teams !== []) {\r\n        let flag = false;\r\n\r\n        this.state.teams.forEach((team, index) => {\r\n          flag = true;\r\n\r\n          let availablePlayers = this.getAvailablePlayers();\r\n          let availablePlayersDiv = [];\r\n          availablePlayers.forEach((availablePlayer, APIndex) => {\r\n            availablePlayersDiv.push(\r\n              <button\r\n                id={\"availablePlayer_\"+availablePlayer[\"id\"]+\"_\"+team[\"id\"]}\r\n                onClick={this.addPlayerToTeam}\r\n                key={\"availablePlayer_\"+APIndex}\r\n                className=\"tag\">\r\n                  {availablePlayer[\"name\"]}\r\n              </button>\r\n            );\r\n          });\r\n          if(availablePlayers === [] || availablePlayers === null || availablePlayers.length === 0) {\r\n            availablePlayersDiv = <p className=\"msg\">No available players left</p>;\r\n          }\r\n\r\n          let selectedPlayers = [];\r\n          team.members.forEach((member, mIndex) => {\r\n            selectedPlayers.push(\r\n              <button\r\n                id={\"selectedPlayer_\"+member[\"id\"]+\"_\"+team[\"id\"]}\r\n                onClick={this.removePlayerFromTeam}\r\n                key={\"selectedPlayer_\"+mIndex}\r\n                className=\"tag\">\r\n                  {this.state.players[member[\"id\"]][\"name\"]}\r\n              </button>\r\n            );\r\n          });\r\n          if(selectedPlayers.length === 0) {\r\n            selectedPlayers = <p className=\"msg\">No members yet</p>;\r\n          }\r\n\r\n          teamsDiv.push(\r\n            <div className=\"player-section\" key={\"teamsDiv\"+index}>\r\n              <p className=\"title\">Team: {index+1}</p>\r\n              <div className=\"add-players-div\">\r\n                <div className=\"player-tags\">\r\n                  <p>Selected players</p>\r\n                  {selectedPlayers}\r\n                </div>\r\n                <div className=\"player-tags\">\r\n                  <p>Available players</p>\r\n                  {availablePlayersDiv}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        });\r\n        if(flag) {\r\n          teamsDiv.unshift(<div className=\"line\" key=\"teamsDiv_0000\"></div>);\r\n          teamsDiv.push(\r\n            <div className=\"section\" key={\"teamsDiv9910\"}>\r\n              <button\r\n                type=\"submit\"\r\n                style={{\"height\":\"40px\", \"backgroundColor\":\"#1B9AAA\"}} \r\n                className=\"submit-players-button\" \r\n                onClick={this.createGameNote} >\r\n                Create game note\r\n              </button>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div className=\"NewGame\">\r\n          <div className=\"NewGame-container\">\r\n              <div className=\"header\">\r\n              <p>New Game</p>\r\n                <Link to=\"/biriba\" >\r\n                  <i className=\"fa fa-arrow-left\" />\r\n                </Link>\r\n              </div>\r\n              \r\n              <div className=\"line\"></div>\r\n\r\n              <div className=\"section\">\r\n                <input \r\n                  type=\"number\" \r\n                  placeholder=\"2\" \r\n                  maxLength=\"2\"\r\n                  minLength=\"1\"\r\n                  max=\"20\"\r\n                  min=\"2\"\r\n                  value={this.state.numberOfPlayers}\r\n                  onChange={this.onChangeNumberOfPlayers}\r\n                />\r\n                <p>Number of players</p>\r\n                <button\r\n                  type=\"submit\" \r\n                  className=\"submit-players-button\" \r\n                  onClick={this.submitNumberOfPlayers} >\r\n                  Submit number of players\r\n                </button>\r\n              </div>\r\n\r\n            {playersDiv}\r\n\r\n            {teamsDiv}\r\n\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(NewGame);","import React from 'react';\r\nimport './UnfinishedGames.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  withRouter,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass UnfinishedGames extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.enterUnfinishedGame = this.enterUnfinishedGame.bind(this);\r\n  }\r\n\r\n  enterUnfinishedGame(e) {\r\n    let unfinishedGameId = e.target.id.split(\"_\")[1]; // given button id format of name_#game-id\r\n    this.props.updateUnfinishedGameId(unfinishedGameId);\r\n    this.props.history.push(\"/biriba/unfinished-games/game\");\r\n  }\r\n\r\n  render() {\r\n\r\n    let unfinishedGamesDiv = [];\r\n\r\n    if(this.props.biribaNotes && this.props.biribaNotes.unfinishedGames) {\r\n      this.props.biribaNotes.unfinishedGames.forEach((unfinishedGame, uIndex) => {\r\n\r\n        // search all teams and gather the maximum score of all\r\n        let maxScore = -1;\r\n        unfinishedGame.teams.forEach((team, tIndex) => {\r\n          let teamsTotalScore = 0;\r\n          unfinishedGame.rounds.forEach((round, rIndex) => {\r\n            round.scores.forEach((score, sIndex) => {\r\n              if(Number(team.id) === Number(score.id)) {\r\n                teamsTotalScore += score.biribaScore + score.countCardsScore;\r\n              }\r\n            });\r\n          });\r\n          if(maxScore < teamsTotalScore) {\r\n            maxScore = teamsTotalScore;\r\n          }\r\n        });\r\n\r\n        unfinishedGamesDiv.push(\r\n          <div className=\"UnfinishedGame-part\" key={\"UnfinishedGame-part\"+uIndex}\r\n              id={\"unfinishedGame_\"+unfinishedGame.id} onClick={this.enterUnfinishedGame}>\r\n            <p className=\"title\">Game:#{uIndex}</p>\r\n            <div className=\"inline\">\r\n              <i className=\"fa fa-calendar\" />\r\n              <p className=\"date\">{unfinishedGame.date}</p>\r\n            </div>\r\n            <p>Players: {unfinishedGame.players.length}</p>\r\n            <p>Max score: {maxScore}</p>\r\n            <p>Teams: {unfinishedGame.teams.length}</p>\r\n            <p>Current round: {unfinishedGame.rounds.length}</p>\r\n          </div>\r\n        )\r\n      });\r\n    }\r\n\r\n    if(unfinishedGamesDiv === []) {\r\n      unfinishedGamesDiv = <p>No unfinished games available</p>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"UnfinishedGames\">\r\n        <div className=\"UnfinishedGames-container\">\r\n          <div className=\"header\">\r\n            <p>Unfinished Games</p>\r\n            <Link to=\"/biriba\" >\r\n              <i className=\"fa fa-arrow-left\" />\r\n            </Link>\r\n          </div>\r\n          \r\n          <div className=\"line\"></div>\r\n\r\n          <div className=\"section\">\r\n            {unfinishedGamesDiv}\r\n          </div>\r\n        </div>;\r\n      </div>  \r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(UnfinishedGames);","import React from 'react';\r\nimport './UnfinishedGame.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  withRouter,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass UnfinishedGame extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"UnfinishedGame\">\r\n        <div className=\"UnfinishedGame-container\">\r\n          <div className=\"header\">\r\n            <p>Unfinished Game {this.props.unfinishedGameId}</p>\r\n            <Link to=\"/biriba/unfinished-games\" >\r\n              <i className=\"fa fa-arrow-left\" />\r\n            </Link>\r\n          </div>\r\n          \r\n          <div className=\"line\"></div>\r\n\r\n          <div className=\"section\">\r\n            game info here\r\n          </div>\r\n        </div>;\r\n      </div>  \r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default UnfinishedGame;","import React from 'react';\r\nimport './Menu.css';\r\nimport NewGame from './NewGame';\r\nimport UnfinishedGames from './UnfinishedGames';\r\nimport UnfinishedGame from './UnfinishedGame';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass Menu extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <Router>\r\n          <div className=\"Menu\">\r\n\r\n            <Switch>\r\n              <Route exact path=\"/biriba\">\r\n                <div className=\"menu-container\">\r\n                    <div className=\"intro\">\r\n                        <h1>Menu</h1>\r\n                    </div>\r\n                    <Link to=\"/biriba/new-game\">\r\n                        <i className=\"fa fa-plus\" />\r\n                        <p>New Game Notes</p>\r\n                    </Link>\r\n                    <Link to=\"/biriba/unfinished-games\">\r\n                        <i className=\"fa fa-edit\" />\r\n                        <p>Unfinished Game Notes</p>\r\n                    </Link>\r\n                    <Link to=\"/biriba/history\">\r\n                        <i className=\"fa fa-clipboard\" />\r\n                        <p>History</p>\r\n                    </Link>\r\n                </div>\r\n              </Route>\r\n\r\n              <Route exact path=\"/biriba/new-game\">\r\n                <NewGame\r\n                  biribaNotes={this.props.biribaNotes}\r\n                  updateBiribaNotes={this.props.updateBiribaNotes}\r\n                  uploadFile={this.props.uploadFile}   \r\n                  updateFile={this.props.updateFile}\r\n                />\r\n              </Route>\r\n\r\n              <Route exact path=\"/biriba/unfinished-games\">\r\n                <UnfinishedGames\r\n                  biribaNotes={this.props.biribaNotes}\r\n                  updateBiribaNotes={this.props.updateBiribaNotes}\r\n                  uploadFile={this.props.uploadFile}   \r\n                  updateFile={this.props.updateFile}\r\n                  updateUnfinishedGameId={this.props.updateUnfinishedGameId}\r\n                  unfinishedGameId={this.props.unfinishedGameId}\r\n                />\r\n              </Route>\r\n\r\n              <Route exact path=\"/biriba/unfinished-games/game\">\r\n                <UnfinishedGame\r\n                  UnfinishedGameId={this.props.unfinishedGameId}\r\n                  biribaNotes={this.props.biribaNotes}\r\n                  updateBiribaNotes={this.props.updateBiribaNotes}\r\n                  uploadFile={this.props.uploadFile}   \r\n                  updateFile={this.props.updateFile}\r\n                />\r\n              </Route>\r\n\r\n            </Switch>\r\n\r\n          </div>\r\n      </Router>  \r\n      );\r\n  }\r\n\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport './Logout.css';\r\n\r\nclass Logout extends React.Component {\r\n\r\n  render() {\r\n      return (\r\n        <div className=\"Logout\">\r\n            <div className=\"logout-container\">\r\n                <div className=\"user\">\r\n                  <i className=\"fa fa-user\" /><p>{this.props.userMail}</p>\r\n                </div>\r\n                <button\r\n                  onClick={this.props.signOutFunction}\r\n                >\r\n                    <i className=\"fa fa-sign-out\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n      );\r\n  }\r\n\r\n}\r\n\r\nexport default Logout;","class Keys {\r\n    static getAPIKey() {\r\n        return \"AIzaSyDx-UwZd7JuuZZEKaA5OeCXpiWr4PGul9I\";\r\n    }\r\n\r\n    static getClientID() {\r\n        return \"286520596166-kcoq2cmrbd0cejleemk2viuq6rguivhj.apps.googleusercontent.com\";\r\n    }\r\n} export default Keys;","import React from 'react';\nimport './App.css';\nimport Login from './Login';\nimport Menu from './Menu';\nimport Logout from './Logout';\n\nimport Keys from './Keys.js';\n\nvar SCOPE = \"https://www.googleapis.com/auth/drive\";\nvar DISCOVERY_URL = \"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\";\nvar API_KEY = Keys.getAPIKey();\nvar CLIENT_ID = Keys.getClientID();\n\nclass App extends React.Component {\n\n\n  /**\n   * biribaNotes.txt file format example:\n   * biribaNotes: {\n   *  unfinishedGames: [\n   *    {\n            \"id\": \"id of unifinished game\",\n            \"date\": \"\",\n            \"teams\": [\n              {\n                \"id\": \"id of team\",\n                \"members\": [\n                  {\n                    \"id\": \"id of player\"\n                  },\n                  {\n                    \"id\": \"id of player\"\n                  }\n                ]\n              }\n            ],\n            \"players\": [\n              {\n                \"id\": \"id of player\",\n                \"name\": \"john\"\n              },\n            ],\n            \"rounds\": [\n              {\n                \"round\": 0,\n                \"scores\": [\n                  {\n                    \"id\": \"teamId\",\n                    \"countCardsScore\": 0,\n                    \"biribaScore\": 0\n                  }\n                ]\n              }\n            ],\n            \"finished\": false\n        },\n      ],\n      finishedGames: [\n        {\n\n        },\n        {\n\n        }\n      ]\n   * }\n   * \n  */\n\n  constructor() {\n    super();\n\n    this.state = {\n      name: \"\",\n      googleAuth: \"\",\n      userMail: \"\",\n      biribaNotes: {},\n      fileId: \"\",\n      unfinishedGameId: -1\n    };\n\n    this.initClient = this.initClient.bind(this);\n    this.signInFunction = this.signInFunction.bind(this);\n    this.signOutFunction = this.signOutFunction.bind(this);\n    this.updateSigninStatus = this.updateSigninStatus.bind(this);\n    this.handleClientLoad = this.handleClientLoad.bind(this);\n    this.setSigninStatus = this.setSigninStatus.bind(this);\n    this.checkFileExists = this.checkFileExists.bind(this);\n    this.readFile = this.readFile.bind(this);\n    this.uploadFile = this.uploadFile.bind(this);\n    this.updateBiribaNotes = this.updateBiribaNotes.bind(this);\n    this.updateFile = this.updateFile.bind(this);\n    this.updateUnfinishedGameId = this.updateUnfinishedGameId.bind(this);\n  }\n\n  componentDidMount(){\n    var script = document.createElement('script');\n    script.onload = this.handleClientLoad;\n    script.src=\"https://apis.google.com/js/api.js\";\n    document.body.appendChild(script);\n  }\n\n  handleClientLoad = () => {\n    window.gapi.load('client:auth2', this.initClient);\n  }\n\n  initClient = () => {\n    try {\n      window.gapi.client.init({\n          'apiKey': API_KEY,\n          'clientId': CLIENT_ID,\n          'scope': SCOPE,\n          'discoveryDocs': [DISCOVERY_URL]\n        }).then(() => {\n          this.setState({\n            googleAuth: window.gapi.auth2.getAuthInstance()\n          });\n          this.state.googleAuth.isSignedIn.listen(this.updateSigninStatus);\n      });\n    } catch(e) {\n      console.log(e);\n    }\n  }\n\n  signInFunction = () => {\n    try {\n      this.state.googleAuth.signIn();\n      this.updateSigninStatus();\n    } catch(e) {\n      console.log(e);\n    }\n  }\n\n  signOutFunction = () => {\n    this.state.googleAuth.signOut();\n    this.updateSigninStatus();\n  }\n\n  updateSigninStatus = () => {\n    this.setSigninStatus();\n  }\n\n  setSigninStatus = async () => {\n    this.setState({\n      userMail: \"\"\n    });\n\n    var user = await this.state.googleAuth.currentUser.get();\n    var isAuthorized = user.hasGrantedScopes(SCOPE);\n    if(isAuthorized){\n      this.setState({\n        userMail: user.vt.cu\n      });\n    }\n\n    //load data if exist\n    this.readFile().then((success) => {\n      console.log(\"File read : \"+success);\n      this.setState({\n        biribaNotes: JSON.parse(success.body)\n      });\n    }).catch((error) => {\n      // no available unfinished game\n      console.log(\"No available file : \"+error);\n    });\n  }\n\n  checkFileExists = async () => {\n    return new Promise((resolve, reject) => {\n      var req = window.gapi.client.drive.files.list({q: \"name='biriba-notes'\"});\n      req.execute((r) => {\n        if(r.files && r.files.length && r.files[0].id){\n          resolve(r.files[0].id);\n        } else {\n          reject(null);\n        }\n      });\n    });\n  }\n\n  readFile = async () => {\n    return new Promise((resolve, reject) => {\n\n      this.checkFileExists().then((fileId) => {\n        this.setState({\n          fileId: fileId\n        });\n\n        var request = window.gapi.client.drive.files.get({\n            fileId: fileId,\n            alt: 'media'\n        });\n  \n        request.then((success) => {\n        \n          console.log(\"file with this id found\");\n          resolve(success);\n        \n        }).catch((error) => {\n          console.log(\"file with this id does not exist\");\n          reject(\"ID_NOT_EXIST\");\n        });\n  \n      }).catch((error) => {\n        console.log(\"file with this name does not exist\");\n        reject(\"NAME_NOT_EXIT\");\n      });\n    });\n  }\n\n  uploadFile = () => {\n    const boundary = '-------314159265358979323846264';\n    const delimiter = \"\\r\\n--\" + boundary + \"\\r\\n\";\n    const close_delim = \"\\r\\n--\" + boundary + \"--\";\n    var base64Data = btoa(JSON.stringify(this.state.biribaNotes));\n    var multipartRequestBody =\n        delimiter +\n        'Content-Type: application/json\\r\\n\\r\\n' +\n        JSON.stringify({\"title\": \"biriba-notes\"}) +\n        delimiter +\n        'Content-Type: ' + \"text/plain\" + '\\r\\n' +\n        'Content-Transfer-Encoding: base64\\r\\n' +\n        '\\r\\n' +\n        base64Data +\n        close_delim;\n    var request = window.gapi.client.request({\n        'path': '/upload/drive/v2/files',\n        'method': 'POST',\n        'params': {'uploadType': 'multipart'},\n        'headers': {\n          'Content-Type': 'multipart/mixed; boundary=\"' + boundary + '\"'\n        },\n        'body': multipartRequestBody});\n    request.execute(function(res) {\n      console.log('New file upploaded!');\n    });\n  };\n\n  updateBiribaNotes(updatedBiribaNotes) {\n    this.setState({\n      biribaNotes: updatedBiribaNotes\n    });\n  }\n\n  updateFile = () => {\n    const boundary = '-------314159265358979323846264';\n    const delimiter = \"\\r\\n--\" + boundary + \"\\r\\n\";\n    const close_delim = \"\\r\\n--\" + boundary + \"--\";\n    var base64Data = btoa(JSON.stringify(this.state.biribaNotes));\n    var multipartRequestBody =\n        delimiter +\n        'Content-Type: application/json\\r\\n\\r\\n' +\n        JSON.stringify({\"title\": \"biriba-notes\"}) +\n        delimiter +\n        'Content-Type: ' + \"text/plain\" + '\\r\\n' +\n        'Content-Transfer-Encoding: base64\\r\\n' +\n        '\\r\\n' +\n        base64Data +\n        close_delim;\n    var request = window.gapi.client.request({\n        'path': '/upload/drive/v2/files/' + this.state.fileId,\n        'method': 'PUT',\n        'params': {'uploadType': 'multipart', 'alt': 'json'},\n        'headers': {\n          'Content-Type': 'multipart/mixed; boundary=\"' + boundary + '\"'\n        },\n        'body': multipartRequestBody});\n    request.execute(function(res) {\n      console.log('File updated!');\n    });\n  }\n\n  updateUnfinishedGameId(id) {\n    this.setState({\n      unfinishedGameId: id\n    });\n  }\n\n  render() {\n    \n    var screen = \"\";\n    var header = \"\";\n\n    if(this.state.userMail === \"\" || this.state.userMail === undefined) {\n      screen = <Login signInFunction={this.signInFunction} />;\n    } else {\n      screen = <Menu \n                biribaNotes={this.state.biribaNotes}\n                updateBiribaNotes={this.updateBiribaNotes}\n                uploadFile={this.uploadFile} \n                updateFile={this.updateFile}\n                updateUnfinishedGameId={this.updateUnfinishedGameId}\n                unfinishedGameId={this.unfinishedGameId}\n              />;\n      header = <Logout userMail={this.state.userMail} signOutFunction={this.signOutFunction} />;\n    }\n\n    return (\n        <div className=\"App\">\n          {header}\n          {screen}\n        </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}